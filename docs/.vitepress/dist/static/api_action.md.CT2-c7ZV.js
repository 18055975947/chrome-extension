import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.DUbQYUwk.js";const u=JSON.parse('{"title":"Chrome.action API","description":"","frontmatter":{},"headers":[],"relativePath":"api/action.md","filePath":"api/action.md"}'),n={name:"api/action.md"},l=e('<h1 id="chrome-action-api" tabindex="-1">Chrome.action API <a class="header-anchor" href="#chrome-action-api" aria-label="Permalink to &quot;Chrome.action API&quot;">​</a></h1><h2 id="一、chrome-action-api-类型-types" tabindex="-1">一、<code>Chrome.action API</code> 类型（<code>Types</code>） <a class="header-anchor" href="#一、chrome-action-api-类型-types" aria-label="Permalink to &quot;一、`Chrome.action API` 类型（`Types`）&quot;">​</a></h2><h3 id="_1-openpopupoptions" tabindex="-1">1. <code>OpenPopupOptions</code> <a class="header-anchor" href="#_1-openpopupoptions" aria-label="Permalink to &quot;1. `OpenPopupOptions`&quot;">​</a></h3><h4 id="_1-属性" tabindex="-1">1. 属性 <a class="header-anchor" href="#_1-属性" aria-label="Permalink to &quot;1. 属性&quot;">​</a></h4><ul><li><strong><code>windowId: number</code></strong> <strong>可选</strong><ul><li>打开操作弹出式窗口的窗口 <code>ID</code>。如果未指定，则默认为当前活动窗口。</li></ul></li></ul><h3 id="_2-tabdetails" tabindex="-1">2. <code>TabDetails</code> <a class="header-anchor" href="#_2-tabdetails" aria-label="Permalink to &quot;2. `TabDetails`&quot;">​</a></h3><h4 id="_1-属性-1" tabindex="-1">1. 属性 <a class="header-anchor" href="#_1-属性-1" aria-label="Permalink to &quot;1. 属性&quot;">​</a></h4><ul><li><strong><code>tabId: number</code></strong> <strong>可选</strong></li><li>要查询其状态的标签页 <code>ID</code>。如果未指定标签页，则返回非标签页专属状态。</li></ul><h3 id="_3-usersettings" tabindex="-1">3. <code>UserSettings</code> <a class="header-anchor" href="#_3-usersettings" aria-label="Permalink to &quot;3. `UserSettings`&quot;">​</a></h3><p>与插件操作相关的用户指定设置的集合。</p><h4 id="_1-属性-2" tabindex="-1">1. 属性 <a class="header-anchor" href="#_1-属性-2" aria-label="Permalink to &quot;1. 属性&quot;">​</a></h4><ul><li><strong><code>isOnToolbar: boolean</code></strong></li><li>插件的操作图标是否显示在浏览器窗口的顶级工具栏中（例如，用户是否已“固定”插件）。</li></ul><h2 id="二、chrome-action-api-方法-methods" tabindex="-1">二、<code>Chrome.action API</code> 方法（<code>Methods</code>） <a class="header-anchor" href="#二、chrome-action-api-方法-methods" aria-label="Permalink to &quot;二、`Chrome.action API` 方法（`Methods`）&quot;">​</a></h2><h3 id="_1-disable" tabindex="-1">1. <code>disable()</code> <a class="header-anchor" href="#_1-disable" aria-label="Permalink to &quot;1. `disable()`&quot;">​</a></h3><p><strong>停用标签页操作。</strong></p><h4 id="_1-示例" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>tabId: number</code></strong> <strong>可选</strong></li><li>要为其修改操作的标签页的 <code>ID</code>。</li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：</li></ul></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_2-enable" tabindex="-1">2. <code>enable()</code> <a class="header-anchor" href="#_2-enable" aria-label="Permalink to &quot;2. `enable()`&quot;">​</a></h3><p><strong>为标签页启用操作。默认情况下，操作处于启用状态。</strong></p><h4 id="_1-示例-1" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-1" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-1" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-1" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>tabId: number</code></strong> <strong>可选</strong><ul><li>要为其修改操作的标签页的 <code>ID</code>。</li></ul></li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示</li></ul></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-1" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-1" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_3-getbadgebackgroundcolor" tabindex="-1">3. <code>getBadgeBackgroundColor()</code> <a class="header-anchor" href="#_3-getbadgebackgroundcolor" aria-label="Permalink to &quot;3. `getBadgeBackgroundColor()`&quot;">​</a></h3><p><strong>获取操作的背景颜色。</strong></p><h4 id="_1-示例-2" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-2" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBadgeBackgroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: TabDetails,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-2" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-2" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details</code>:</strong> <code>TabDetails</code></li><li><strong><code>callback function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示</li></ul></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ColorArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-2" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-2" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;</code></strong> <code>browserAction.ColorArray</code> <strong><code>&gt;</code></strong></li><li><code>ColorArray: [number, number, number, number]</code></li></ul><h3 id="_4-getbadgetext" tabindex="-1">4. <code>getBadgeText()</code> <a class="header-anchor" href="#_4-getbadgetext" aria-label="Permalink to &quot;4. `getBadgeText()`&quot;">​</a></h3><p><strong>获取操作的标记文本。</strong></p><p>如果未指定标签页，则返回非标签页专用标志文本。如果启用了 <code>displayActionCountAsBadgeText</code>，则系统将返回占位符文本，除非存在 <code>declarativeNetRequestFeedback</code> 权限或提供了标签页专用的标记文本。</p><h4 id="_1-示例-3" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-3" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBadgeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: TabDetails,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-3" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-3" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details:</code></strong> <code>TabDetails</code></li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：</li></ul></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-3" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-3" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;string&gt;</code></strong></li></ul><h3 id="_5-getbadgetextcolor" tabindex="-1">5. <code>getBadgeTextColor()</code> <a class="header-anchor" href="#_5-getbadgetextcolor" aria-label="Permalink to &quot;5. `getBadgeTextColor()`&quot;">​</a></h3><p><strong>获取操作的文本颜色。</strong></p><h4 id="_1-示例-4" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-4" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBadgeTextColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: TabDetails,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-4" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-4" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details:</code></strong> <code>TabDetails</code></li><li><strong><code>callback</code></strong> <strong><code>functioon</code>（可选）</strong></li><li><code>callback</code> 参数如下所示：</li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ColorArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-4" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-4" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;</code></strong> <code>browserAction.ColorArray</code> <strong><code>&gt;</code></strong></li></ul><h3 id="_6-getpopup" tabindex="-1">6. <code>getPopup()</code> <a class="header-anchor" href="#_6-getpopup" aria-label="Permalink to &quot;6. `getPopup()`&quot;">​</a></h3><p><strong>获取设置为此操作的弹出式窗口的 <code>HTML</code> 文档。</strong></p><h4 id="_1-示例-5" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-5" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPopup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: TabDetails,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-5" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-5" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details:</code></strong> <code>TabDetails</code></li><li><strong><code>callback function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：</li></ul></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-5" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-5" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;string&gt;</code></strong></li></ul><h3 id="_7-gettitle" tabindex="-1">7. <code>getTitle()</code> <a class="header-anchor" href="#_7-gettitle" aria-label="Permalink to &quot;7. `getTitle()`&quot;">​</a></h3><p><strong>获取操作的标题。</strong></p><h4 id="_1-示例-6" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-6" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: TabDetails,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-6" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-6" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details:</code></strong> <code>TabDetails</code></li><li><strong><code>callback: function</code>（可选）</strong></li><li><code>callback</code> 参数如下所示：</li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-6" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-6" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;string&gt;</code></strong></li></ul><h3 id="_8-getusersettings" tabindex="-1">8. <code>getUserSettings()</code> <a class="header-anchor" href="#_8-getusersettings" aria-label="Permalink to &quot;8. `getUserSettings()`&quot;">​</a></h3><p><strong>返回与插件操作相关的用户指定设置。</strong></p><h4 id="_1-示例-7" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-7" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUserSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-参数-7" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-7" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>callback: function</code>（可选）</strong></li><li><code>callback</code> 参数如下所示：</li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">userSettings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UserSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-7" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-7" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;</code></strong> <code>UserSettings</code> <strong><code>&gt;</code></strong></li></ul><h3 id="_9-isenabled" tabindex="-1">9. <code>isEnabled()</code> <a class="header-anchor" href="#_9-isenabled" aria-label="Permalink to &quot;9. `isEnabled()`&quot;">​</a></h3><p><strong>指示是否已为标签页启用插件操作</strong>（如果未提供 tabId，则是在全局范围内启用）。仅使用 <code>declarativeContent</code> 启用的操作始终返回 false。</p><h4 id="_1-示例-8" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-8" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEnabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-8" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-8" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>tabId: number</code></strong> <strong>可选</strong></li><li>要检查其启用状态的标签页的 <code>ID</code>。</li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：</li></ul></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">isEnabled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-返回-8" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-8" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;boolean&gt;</code></strong></li></ul><h3 id="_10-openpopup" tabindex="-1">10. <code>openPopup()</code> <a class="header-anchor" href="#_10-openpopup" aria-label="Permalink to &quot;10. `openPopup()`&quot;">​</a></h3><p><strong>打开插件的弹出式窗口。</strong></p><h4 id="_1-示例-9" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-9" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openPopup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenPopupOptions,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-9" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-9" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>options:</code></strong> <code>OpenPopupOptions</code> <strong>可选</strong></li><li>指定用于打开弹出式窗口的选项。</li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：<code>()=&gt;void</code></li></ul></li></ul><h4 id="_3-返回-9" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-9" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_11-setbadgebackgroundcolor" tabindex="-1">11. <code>setBadgeBackgroundColor()</code> <a class="header-anchor" href="#_11-setbadgebackgroundcolor" aria-label="Permalink to &quot;11. `setBadgeBackgroundColor()`&quot;">​</a></h3><p><strong>设置标志的背景颜色。</strong></p><h4 id="_1-示例-10" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-10" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBadgeBackgroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: object,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-10" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-10" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details: object</code></strong><ul><li><strong><code>color: string|ColorArray</code></strong><ul><li><code>ColorArray</code>一个由 [0,255] 范围内的四个整数组成的数组，这些整数构成了徽章的 RGBA 颜色。例如，不透明的红色为 [255, 0, 0, 255]。也可以是具有 <code>CSS</code> 值的字符串，其中不透明红色为 <code>#FF0000</code> 或 <code>#F00</code>。</li></ul></li><li><strong><code>tabId: number</code></strong> <strong>可选</strong><ul><li>将更改限制为选择特定标签页的时间。关闭标签页后自动重置。</li></ul></li></ul></li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：<code>()=&gt;void</code></li></ul></li></ul><h4 id="_3-返回-10" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-10" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_12-setbadgetext" tabindex="-1">12. <code>setBadgeText()</code> <a class="header-anchor" href="#_12-setbadgetext" aria-label="Permalink to &quot;12. `setBadgeText()`&quot;">​</a></h3><p><strong>设置操作的标记文本。标记会显示在图标顶部。</strong></p><h4 id="_1-示例-11" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-11" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBadgeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: object,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-11" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-11" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details: object</code></strong></li><li><strong><code>tabId: number</code></strong> <strong>可选</strong><ul><li>将更改限制为选择特定标签页的时间。关闭标签页后自动重置。</li></ul></li><li><strong><code>text: string</code>（可选）</strong><ul><li>可以传递任意数量的字符，但不得超过四个字符。如果传递了空字符串 (&#39;&#39;)，标志文本将被清除。如果指定了 <code>tabId</code> 且 <code>text</code> 为 <code>null</code>，指定标签页的文本将会被清除，并默认为全局标记文本。</li></ul></li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：<code>()=&gt;void</code></li></ul></li></ul><h4 id="_3-返回-11" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-11" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_13-setbadgetextcolor" tabindex="-1">13. <code>setBadgeTextColor()</code> <a class="header-anchor" href="#_13-setbadgetextcolor" aria-label="Permalink to &quot;13. `setBadgeTextColor()`&quot;">​</a></h3><p><strong>设置标志的文本颜色。</strong></p><h4 id="_1-示例-12" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-12" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBadgeTextColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: object,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-12" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-12" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details: object</code></strong></li><li><strong><code>color: string|ColorArray</code></strong></li><li><strong><code>tabId: number</code></strong> <strong>可选</strong><ul><li>将更改限制为选择特定标签页的时间。关闭标签页后自动重置。</li></ul></li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：<code>()=&gt;void</code></li></ul></li></ul><h4 id="_3-返回-12" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-12" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_14-seticon" tabindex="-1">14. <code>setIcon()</code> <a class="header-anchor" href="#_14-seticon" aria-label="Permalink to &quot;14. `setIcon()`&quot;">​</a></h3><p><strong>设置操作的图标。</strong></p><p>可将图标指定为图像文件的路径、画布元素的像素数据或上述任何一项的字典。必须指定 <strong><code>path</code></strong> 或 <strong><code>imageData</code></strong> 属性。</p><h4 id="_1-示例-13" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-13" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setIcon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: object,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-13" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-13" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details: object</code></strong><ul><li><strong><code>imageData:</code></strong> <strong><code>ImageData</code></strong> <strong>| <code>object</code>（可选）</strong><ul><li><code>ImageData</code> 对象或表示要设置的图标的 {<code>size -&gt; ImageData</code>} 字典。如果将图标指定为字典，则系统会根据屏幕的像素密度选择要使用的实际图片。如果适合一个屏幕空间单位的图片像素数等于 <code>scale</code>，则系统会选择尺寸为 <code>scale * n</code> 的图片，其中 <code>n</code> 是界面中图标的尺寸。必须至少指定一张图片。请注意，<code>&quot;details.imageData = foo&quot;</code> 等同于 <code>&quot;details.imageData = {&#39;16&#39;: foo}&quot;</code></li></ul></li><li><strong><code>path</code>:</strong> <strong><code>string|object</code></strong> ****<strong>可选</strong><ul><li>相对图片路径或指向要设置的图标的字典 {<code>size -&gt; relative image path</code>}。</li></ul></li><li><strong><code>tabId: number</code></strong> <strong>可选</strong><ul><li>将更改限制为选择特定标签页的时间。关闭标签页后自动重置。</li></ul></li></ul></li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：<code>()=&gt;void</code></li></ul></li></ul><h4 id="_3-返回-13" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-13" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_15-setpopup" tabindex="-1">15. <code>setPopup()</code> <a class="header-anchor" href="#_15-setpopup" aria-label="Permalink to &quot;15. `setPopup()`&quot;">​</a></h3><p><strong>设置 HTML 文档，使其在用户点击操作的图标时以弹出式窗口的形式打开。</strong></p><h4 id="_1-示例-14" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-14" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPopup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: object,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-14" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-14" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details: object</code></strong><ul><li><strong><code>popup:</code></strong> <strong><code>string</code></strong><ul><li>要在弹出式窗口中显示的 <code>HTML</code> 文件的相对路径。如果设置为空字符串 (&#39;&#39;)，系统不会显示弹出式窗口。</li></ul></li><li><strong><code>tabId: number</code></strong> <strong>可选</strong></li><li>将更改限制为选择特定标签页的时间。关闭标签页后自动重置。</li></ul></li><li><strong><code>callback: function</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：<code>()=&gt;void</code></li></ul></li></ul><h4 id="_3-返回-14" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-14" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h3 id="_16-settitle" tabindex="-1">16. <code>setTitle()</code> <a class="header-anchor" href="#_16-settitle" aria-label="Permalink to &quot;16. `setTitle()`&quot;">​</a></h3><p><strong>设置操作的标题。这会显示在提示中。</strong></p><h4 id="_1-示例-15" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-15" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  details: object,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-参数-15" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-15" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>details: object</code></strong><ul><li><strong><code>tabId: number</code></strong> <strong>可选</strong><ul><li>将更改限制为选择特定标签页的时间。关闭标签页后自动重置。</li></ul></li><li><strong>title: string</strong><ul><li>鼠标悬停时，操作应显示的字符串。</li></ul></li></ul></li><li><strong><code>callback: funtion</code>（可选）</strong><ul><li><code>callback</code> 参数如下所示：<code>()=&gt;void</code></li></ul></li></ul><h4 id="_3-返回-15" tabindex="-1">3. 返回 <a class="header-anchor" href="#_3-返回-15" aria-label="Permalink to &quot;3. 返回&quot;">​</a></h4><ul><li><strong><code>Promise&lt;void&gt;</code></strong></li></ul><h2 id="三、chrome-action-api-事件-events" tabindex="-1">三、<code>Chrome.action API</code> 事件（<code>Events</code>） <a class="header-anchor" href="#三、chrome-action-api-事件-events" aria-label="Permalink to &quot;三、`Chrome.action API` 事件（`Events`）&quot;">​</a></h2><h3 id="_1-onclicked" tabindex="-1">1. <code>onClicked</code> <a class="header-anchor" href="#_1-onclicked" aria-label="Permalink to &quot;1. `onClicked`&quot;">​</a></h3><p><strong>点击操作图标时触发。</strong></p><p><strong>如果操作具有弹出式窗口，则不会触发此事件。</strong></p><h4 id="_1-示例-16" tabindex="-1">1. 示例 <a class="header-anchor" href="#_1-示例-16" aria-label="Permalink to &quot;1. 示例&quot;">​</a></h4><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.action.onClicked.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-参数-16" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数-16" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h4><ul><li><strong><code>callback: function</code></strong><ul><li><code>callback</code> 参数如下所示：</li></ul></li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tab</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tabs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',161),t=[l];function o(r,h,d,p,c,k){return i(),a("div",null,t)}const b=s(n,[["render",o]]);export{u as __pageData,b as default};
