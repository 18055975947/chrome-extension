import{_ as s,c as i,o as a,a4 as e,ad as n,ae as l,af as t}from"./chunks/framework.DUbQYUwk.js";const m=JSON.parse('{"title":"Chrome.runtime API 解析","description":"","frontmatter":{},"headers":[],"relativePath":"api/runtime.md","filePath":"api/runtime.md"}'),r={name:"api/runtime.md"},h=e('<h1 id="chrome-runtime-api-解析" tabindex="-1"><code>Chrome.runtime API</code> 解析 <a class="header-anchor" href="#chrome-runtime-api-解析" aria-label="Permalink to &quot;`Chrome.runtime API` 解析&quot;">​</a></h1><p>运行时</p><h2 id="一、各模块-chrome-runtime-api-内容" tabindex="-1">一、各模块 <code>chrome.runtime API</code> 内容 <a class="header-anchor" href="#一、各模块-chrome-runtime-api-内容" aria-label="Permalink to &quot;一、各模块 `chrome.runtime API` 内容&quot;">​</a></h2><h3 id="_1-service-worker-中-runtime-内容" tabindex="-1">1. <code>Service worker</code> 中 <code>runtime</code> 内容 <a class="header-anchor" href="#_1-service-worker-中-runtime-内容" aria-label="Permalink to &quot;1. `Service worker` 中 `runtime` 内容&quot;">​</a></h3><p><img src="'+n+'" alt="service runtime" loading="lazy"></p><h3 id="_2-action-中-runtime-内容" tabindex="-1">2. <code>Action</code> 中 <code>runtime</code> 内容 <a class="header-anchor" href="#_2-action-中-runtime-内容" aria-label="Permalink to &quot;2. `Action` 中 `runtime` 内容&quot;">​</a></h3><p><img src="'+l+'" alt="action runtime" loading="lazy"></p><h3 id="_3-content-中-runtime-内容" tabindex="-1">3. <code>Content</code> 中 <code>runtime</code> 内容 <a class="header-anchor" href="#_3-content-中-runtime-内容" aria-label="Permalink to &quot;3. `Content` 中 `runtime` 内容&quot;">​</a></h3><p><img src="'+t+`" alt="content runtime" loading="lazy"></p><h2 id="二、权限" tabindex="-1">二、权限 <a class="header-anchor" href="#二、权限" aria-label="Permalink to &quot;二、权限&quot;">​</a></h2><p><code>Chrome runtime API</code> 上的大多数方法都不需要任何权限 但是 <strong>sendNativeMessage()</strong> 和 <strong>connectNative()</strong> 除外，它们需要 <strong>nativeMessaging</strong> 权限。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;nativeMessaging&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="三、功能" tabindex="-1">三、功能 <a class="header-anchor" href="#三、功能" aria-label="Permalink to &quot;三、功能&quot;">​</a></h2><ol><li>使用 <code>chrome.runtime API</code> 检索 <code>Service Worker</code>，返回有关 <code>manifest.json</code> 的详细信息</li><li>监听和响应应用或插件生命周期中的事件</li><li>还可以使用此 API 将网址的相对路径转换为完整的一个 URL</li><li>...</li></ol><h2 id="四、runtime-api-用法" tabindex="-1">四、<code>Runtime API</code> 用法 <a class="header-anchor" href="#四、runtime-api-用法" aria-label="Permalink to &quot;四、\`Runtime API\` 用法&quot;">​</a></h2><h3 id="_1-消息传递" tabindex="-1">1. 消息传递 <a class="header-anchor" href="#_1-消息传递" aria-label="Permalink to &quot;1. 消息传递&quot;">​</a></h3><p>可以使用以下方法和事件与插件中的不同上下文以及其他插件进行通信：</p><ul><li><code>connect()</code></li><li><code>onConnect</code></li><li><code>onConnectExternal</code></li><li><code>sendMessage()</code></li><li><code>onMessage</code></li><li><code>onMessageExternal</code></li></ul><p>插件还可以使用 <code>connectNative()</code> 和 <code>sendNativeMessage()</code> 将消息传递给用户设备上的原生应用。</p><h4 id="_1-1-content-scripts-js-文件发送和接收消息" tabindex="-1">1.1. <code>Content-scripts.js</code> 文件发送和接收消息 <a class="header-anchor" href="#_1-1-content-scripts-js-文件发送和接收消息" aria-label="Permalink to &quot;1.1. \`Content-scripts.js\` 文件发送和接收消息&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用 sendMessage 从 Content 发送消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用 onMessage.addListener Content 接收消息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chrome.runtime.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sender.tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;from a content script:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sender.tab.url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;from the extension&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (request.greeting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;goodbye&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用 connect 从 Content 发送和接收消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;knockknock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({joke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Knock knock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  port.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg.question </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Who&#39;s there?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({answer: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Madame&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg.question </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Madame who?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({answer: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Madame... Bovary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="_1-2-service-worker-js-文件发送和接收消息" tabindex="-1">1.2. <code>service-worker.js</code> 文件发送和接收消息 <a class="header-anchor" href="#_1-2-service-worker-js-文件发送和接收消息" aria-label="Permalink to &quot;1.2. \`service-worker.js\` 文件发送和接收消息&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用 sendMessage 从 background/service-worker 发送消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lastFocusedWindow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab.id, {greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用 onMessage.addListener background/service-worker 接收消息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chrome.runtime.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sender.tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;from a content script:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sender.tab.url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;from the extension&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (request.greeting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;goodbye&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用 onConnect background/service-worker 接收消息和发送</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chrome.runtime.onConnect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(port.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;knockknock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    port.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg.joke </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Knock knock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({question: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Who&#39;s there?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg.answer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Madame&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({question: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Madame who?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg.answer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Madame... Bovary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({question: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;I don&#39;t get it.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="_2-访问拓展程序和平台元数据" tabindex="-1">2. 访问拓展程序和平台元数据 <a class="header-anchor" href="#_2-访问拓展程序和平台元数据" aria-label="Permalink to &quot;2. 访问拓展程序和平台元数据&quot;">​</a></h3><ul><li><code>getManifest()</code></li><li><code>getPlatformInfo()</code></li></ul><h3 id="_3-管理拓展程序生命周期" tabindex="-1">3. 管理拓展程序生命周期 <a class="header-anchor" href="#_3-管理拓展程序生命周期" aria-label="Permalink to &quot;3. 管理拓展程序生命周期&quot;">​</a></h3><ul><li><code>onInstalled</code></li><li><code>onStartup</code></li><li><code>openOptionsPage()</code></li><li><code>reload()</code></li><li><code>requestUpdateCheck()</code></li><li><code>setUninstallURL()</code></li></ul><h3 id="_4-实用功能" tabindex="-1">4. 实用功能 <a class="header-anchor" href="#_4-实用功能" aria-label="Permalink to &quot;4. 实用功能&quot;">​</a></h3><ul><li><code>getURL()</code></li><li><code>restart()</code></li><li><code>restartAfterDelay()</code></li></ul><h2 id="五、chrome-runtime-api-类型-types" tabindex="-1">五、<code>Chrome.runtime API</code> 类型（<code>Types</code>） <a class="header-anchor" href="#五、chrome-runtime-api-类型-types" aria-label="Permalink to &quot;五、\`Chrome.runtime API\` 类型（\`Types\`）&quot;">​</a></h2><h3 id="_1-contextfilter-object" tabindex="-1">1. <code>ContextFilter</code>: <code>object</code> <a class="header-anchor" href="#_1-contextfilter-object" aria-label="Permalink to &quot;1. \`ContextFilter\`: \`object\`&quot;">​</a></h3><ul><li>用于匹配特定插件上下文的过滤器。</li><li>匹配的上下文必须与所有指定的过滤条件匹配；任何未指定的过滤条件均匹配所有可用的上下文。因此，“{}”的过滤器将匹配所有可用上下文。</li></ul><h4 id="_1-1-属性" tabindex="-1">1.1. 属性 <a class="header-anchor" href="#_1-1-属性" aria-label="Permalink to &quot;1.1. 属性&quot;">​</a></h4><ul><li><strong>contextIds</strong>: <code>string</code>[] 可选此上下文的唯一标识符</li><li><strong>contextTypes</strong>:<code>ContextType</code>[] 可选对应的上下文类型。</li><li><strong>documentIds</strong>: <code>string</code>[] 可选 与此上下文关联的文档的 <code>UUID</code></li><li><strong>documentOrigins</strong>: <code>string</code>[] 可选 与此上下文关联的文档的来源</li><li><strong>documentUrls</strong>: <code>string</code>[] 可选 与此上下文关联的文档的网址</li><li><strong>frameIds</strong>: <code>number</code>[] 可选 此上下文的帧 <code>ID</code></li><li><strong>incognito</strong>: <code>boolean</code> 可选 上下文是否与无痕模式个人资料相关联。</li><li><strong>tabIds</strong>: <code>number</code>[] 可选 此上下文的标签页 <code>ID</code></li><li><strong>windowIds</strong>: <code>number</code>[] 可选 此上下文的窗口 <code>ID</code></li></ul><h3 id="_2-contexttype-枚举" tabindex="-1">2. <code>ContextType</code>: 枚举 <a class="header-anchor" href="#_2-contexttype-枚举" aria-label="Permalink to &quot;2. \`ContextType\`: 枚举&quot;">​</a></h3><h4 id="_2-1-枚举值" tabindex="-1">2.1. 枚举值 <a class="header-anchor" href="#_2-1-枚举值" aria-label="Permalink to &quot;2.1. 枚举值&quot;">​</a></h4><ul><li><code>TAB</code>: 以标签页形式指定上下文类型</li><li><code>POPUP</code>: 将上下文类型指定为插件弹出式窗口</li><li><code>BACKGROUND</code>: 将上下文类型指定为 <code>Service Worker</code>。</li><li><code>OFFSCREEN_DOCUMENT</code>: 将上下文类型指定为屏幕外文档。</li><li><code>SIDE_PANEL</code>: 以侧边栏形式指定上下文类型。</li></ul><h3 id="_3-extensioncontext-object" tabindex="-1">3. <code>ExtensionContext</code>：<code>object</code> <a class="header-anchor" href="#_3-extensioncontext-object" aria-label="Permalink to &quot;3. \`ExtensionContext\`：\`object\`&quot;">​</a></h3><ul><li>上下文托管插件内容</li></ul><h4 id="_3-1-属性" tabindex="-1">3.1. 属性 <a class="header-anchor" href="#_3-1-属性" aria-label="Permalink to &quot;3.1. 属性&quot;">​</a></h4><ul><li><strong>contextId</strong>: <code>string</code> 此上下文的唯一标识符</li><li><strong>contextType</strong>: <code>ContextType</code> 对应的上下文类型</li><li><strong>documentId</strong>: string 可选 与此上下文关联的文档的 <code>UUID</code></li><li><strong>documentOrigin</strong>: <code>string</code> 可选 与此上下文关联的文档的来源</li><li><strong>documentUrl</strong>: <code>string</code> 可选 与此上下文关联的文档的网址</li><li><strong>frameId</strong>: <code>number</code> 此上下文的帧 ID，如果该上下文未托管在帧中，则为 -1</li><li><strong>incognito</strong>: <code>boolean</code> 上下文是否与无痕模式个人资料相关联</li><li><strong>tabId</strong>: <code>number</code> 此上下文的标签页 ID，如果该上下文未托管在标签页中，则为 -1</li><li><strong>windowId</strong>: <code>number</code> 此上下文的窗口 ID，如果此上下文未托管在窗口中，则为 -1</li></ul><h3 id="_4-messagesender-object" tabindex="-1">4. <code>MessageSender</code>：<code>object</code> <a class="header-anchor" href="#_4-messagesender-object" aria-label="Permalink to &quot;4. \`MessageSender\`：\`object\`&quot;">​</a></h3><ul><li>一个对象，其中包含有关发送消息或请求的脚本上下文的信息。</li></ul><h4 id="_4-1-属性" tabindex="-1">4.1. 属性 <a class="header-anchor" href="#_4-1-属性" aria-label="Permalink to &quot;4.1. 属性&quot;">​</a></h4><ul><li><strong>documentId</strong>: <code>string</code> 可选 打开连接的文档的 <code>UUID</code>。</li><li><strong>documentLifecycle</strong>: <code>string</code> 可选 打开连接的文档在端口创建时所处的生命周期</li><li><strong>frameId</strong>: <code>number</code> 可选 打开连接的帧，0 表示顶级帧，正值表示子帧</li><li><strong>id</strong>: <code>string</code> 可选 打开连接的插件或应用的 <code>ID。</code></li><li><strong>nativeApplication</strong>: <code>string</code> 可选 打开连接的原生应用的名称。</li><li><strong>origin</strong>: <code>string</code> 可选 打开连接的网页或框架的来源</li><li><strong>tab</strong>: <code>Tab</code> 可选 打开连接的 <code>tabs.Tab</code></li><li><strong>tlsChannelId</strong>: <code>string</code> 可选 打开连接的页面或框架的 <code>TLS</code> 通道 <code>ID</code></li><li><strong>url</strong>: <code>string</code> 可选 打开连接的网页或框架的网址</li></ul><h3 id="_5-oninstalledreason-枚举" tabindex="-1">5. <code>OnInstalledReason</code>: 枚举 <a class="header-anchor" href="#_5-oninstalledreason-枚举" aria-label="Permalink to &quot;5. \`OnInstalledReason\`: 枚举&quot;">​</a></h3><ul><li>分派此事件的原因。</li></ul><h4 id="_5-1-枚举值" tabindex="-1">5.1. 枚举值 <a class="header-anchor" href="#_5-1-枚举值" aria-label="Permalink to &quot;5.1. 枚举值&quot;">​</a></h4><ul><li><code>install</code>: 将事件原因指定为安装。</li><li><code>update</code>: 以插件更新的形式指定事件原因。</li><li><code>chrome_update</code>: 将事件原因指定为 Chrome 更新。</li><li><code>shared_module_update</code>: 将事件原因指定为共享模块的更新。</li></ul><h3 id="_6-onrestartrequiredreason-枚举" tabindex="-1">6. OnRestartRequiredReason: 枚举 <a class="header-anchor" href="#_6-onrestartrequiredreason-枚举" aria-label="Permalink to &quot;6. OnRestartRequiredReason: 枚举&quot;">​</a></h3><ul><li>分派事件的原因</li></ul><h4 id="_6-1-枚举值" tabindex="-1">6.1. 枚举值 <a class="header-anchor" href="#_6-1-枚举值" aria-label="Permalink to &quot;6.1. 枚举值&quot;">​</a></h4><ul><li><code>app_update</code>: 将事件原因指定为应用更新。</li><li><code>os_update</code>: 将事件原因指定为操作系统更新。</li><li><code>periodic</code>: 将事件原因指定为应用定期重启。</li></ul><h3 id="_7-platformarch-枚举" tabindex="-1">7. PlatformArch: 枚举 <a class="header-anchor" href="#_7-platformarch-枚举" aria-label="Permalink to &quot;7. PlatformArch: 枚举&quot;">​</a></h3><ul><li>机器的处理器架构。</li></ul><h4 id="_7-1-枚举值" tabindex="-1">7.1. 枚举值 <a class="header-anchor" href="#_7-1-枚举值" aria-label="Permalink to &quot;7.1. 枚举值&quot;">​</a></h4><ul><li><code>arm</code>: 将处理器架构指定为 <code>arm</code></li><li><code>arm64</code>: 将处理器架构指定为 <code>arm64</code></li><li><code>x86-32</code>: 将处理器架构指定为 <code>x86-32</code></li><li><code>x86-64</code>: 将处理器架构指定为 <code>x86-64</code></li><li><code>mips</code>: 以 <code>mips</code> 形式指定处理器架构</li><li><code>mips64</code>: 以 <code>mips64</code> 形式指定处理器架构</li></ul><h3 id="_8-platforminfo-object" tabindex="-1">8. <code>PlatformInfo</code>: <code>object</code> <a class="header-anchor" href="#_8-platforminfo-object" aria-label="Permalink to &quot;8. \`PlatformInfo\`: \`object\`&quot;">​</a></h3><ul><li>包含当前平台相关信息的对象。</li></ul><h4 id="_8-1-属性" tabindex="-1">8.1. 属性 <a class="header-anchor" href="#_8-1-属性" aria-label="Permalink to &quot;8.1. 属性&quot;">​</a></h4><ul><li><strong>arch</strong>: <code>PlatformArch</code> 机器的处理器架构。</li><li><strong>nacl_arch</strong>: <code>PlatformNaclArch</code> 原生客户端架构</li><li><strong>os</strong>: <code>PlatformOs</code> 运行 <code>Chrome</code> 的操作系统。</li></ul><h3 id="_9-platformnaclarch-枚举" tabindex="-1">9. <code>PlatformNaclArch</code>: 枚举 <a class="header-anchor" href="#_9-platformnaclarch-枚举" aria-label="Permalink to &quot;9. \`PlatformNaclArch\`: 枚举&quot;">​</a></h3><ul><li>原生客户端架构</li></ul><h4 id="_9-1-枚举值" tabindex="-1">9.1. 枚举值 <a class="header-anchor" href="#_9-1-枚举值" aria-label="Permalink to &quot;9.1. 枚举值&quot;">​</a></h4><ul><li><code>arm</code>: 将原生客户端架构指定为 <code>arm</code></li><li><code>x86-32</code>: 将原生客户端架构指定为 <code>x86-32</code></li><li><code>x86-64</code>: 将原生客户端架构指定为 <code>x86-64</code></li><li><code>mips</code>: 以 <code>mips</code> 形式指定原生客户端架构</li><li><code>mips64</code>: 以 <code>mips64</code> 形式指定原生客户端架构</li></ul><h3 id="_10-platformos-枚举" tabindex="-1">10. <code>PlatformOs</code>：枚举 <a class="header-anchor" href="#_10-platformos-枚举" aria-label="Permalink to &quot;10. \`PlatformOs\`：枚举&quot;">​</a></h3><ul><li>运行 <code>Chrome</code> 的操作系统。</li></ul><h4 id="_10-1-枚举值" tabindex="-1">10.1. 枚举值 <a class="header-anchor" href="#_10-1-枚举值" aria-label="Permalink to &quot;10.1. 枚举值&quot;">​</a></h4><ul><li><code>mac</code>: 指定 <code>MacOS</code> 操作系统。</li><li><code>win</code>: 指定了 <code>Windows</code> 操作系统。</li><li><code>android</code>: 用于指定 <code>Android</code> 操作系统。</li><li><code>cros</code>: 指定 <code>Chrome</code> 操作系统。</li><li><code>linux</code>: 用于指定 <code>Linux</code> 操作系统。</li><li><code>openbsd</code>: 指定 <code>OpenBSD</code> 操作系统。</li><li><code>fuchsia</code>: 用于指定 <code>Fuchsia</code> 操作系统。</li></ul><h3 id="_11-port" tabindex="-1">11. <code>Port</code> <a class="header-anchor" href="#_11-port" aria-label="Permalink to &quot;11. \`Port\`&quot;">​</a></h3><ul><li>允许与其他网页进行双向通信的对象</li></ul><h4 id="_11-1-属性" tabindex="-1">11.1. 属性 <a class="header-anchor" href="#_11-1-属性" aria-label="Permalink to &quot;11.1. 属性&quot;">​</a></h4><ul><li><strong>name</strong>: <code>string</code> 端口的名称，在对 <code>runtime.connect</code> 的调用中指定</li><li><strong>onDisconnect</strong>: <code>Event</code> <code>\\&lt;function void \\&gt;</code> 在端口与另一端断开连接时触发。</li><li><strong>onMessage</strong>: <code>Event</code> <code>\\&lt;function void\\&gt;</code> 端口的另一端调用 <code>postMessage</code> 时会触发此事件</li><li><strong>sender</strong>: <code>MessageSender</code> 可选 此属性将仅出现在传递到 <code>onConnect</code> / <code>onConnectExternal</code> / <code>onConnectNative</code> 监听器的端口上。</li><li><strong>disconnect</strong>: <code>void</code> 立即断开该端口的连接</li><li><strong>postMessage</strong>: <code>void</code> 向端口的另一端发送消息。如果端口断开连接，则会抛出错误</li></ul><h3 id="_12-requestupdatecheckstatus-枚举" tabindex="-1">12. <code>RequestUpdateCheckStatus</code>: 枚举 <a class="header-anchor" href="#_12-requestupdatecheckstatus-枚举" aria-label="Permalink to &quot;12. \`RequestUpdateCheckStatus\`: 枚举&quot;">​</a></h3><ul><li>更新检查的结果</li></ul><h4 id="_12-1-枚举值" tabindex="-1">12.1. 枚举值 <a class="header-anchor" href="#_12-1-枚举值" aria-label="Permalink to &quot;12.1. 枚举值&quot;">​</a></h4><ul><li><code>throttled</code>: 指定状态检查已受到限制。如果在短时间内反复检查，就可能会发生这种情况</li><li><code>no_update</code>: 指定没有可安装的更新。</li><li><code>update_available</code>: 指明有要安装的可用更新。</li></ul><h2 id="六、chrome-runtime-api-属性-properties" tabindex="-1">六、<code>Chrome.runtime API</code> 属性（<code>Properties</code>） <a class="header-anchor" href="#六、chrome-runtime-api-属性-properties" aria-label="Permalink to &quot;六、\`Chrome.runtime API\` 属性（\`Properties\`）&quot;">​</a></h2><h3 id="_4-1-id" tabindex="-1">4.1. <code>id</code> <a class="header-anchor" href="#_4-1-id" aria-label="Permalink to &quot;4.1. \`id\`&quot;">​</a></h3><ul><li><code>string</code> 插件/应用的 ID。</li></ul><h3 id="_4-2-lasterror" tabindex="-1">4.2. <code>lastError</code> <a class="header-anchor" href="#_4-2-lasterror" aria-label="Permalink to &quot;4.2. \`lastError\`&quot;">​</a></h3><ul><li><code>Object</code> 如果 <code>API</code> 函数调用失败，则填充错误消息，否则将填充未定义状态 <ul><li><code>message</code>: <code>string</code> 可选 所发生的错误的详细信息</li></ul></li></ul><h2 id="七、chrome-runtime-api-方法-methods" tabindex="-1">七、<code>Chrome.runtime API</code> 方法（<code>Methods</code>） <a class="header-anchor" href="#七、chrome-runtime-api-方法-methods" aria-label="Permalink to &quot;七、\`Chrome.runtime API\` 方法（\`Methods\`）&quot;">​</a></h2><h3 id="_1-connect" tabindex="-1">1. <code>connect()</code> <a class="header-anchor" href="#_1-connect" aria-label="Permalink to &quot;1. \`connect()\`&quot;">​</a></h3><blockquote><p>尝试连接插件/应用（例如后台网页）或其他插件/应用中的监听器</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extensionId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  connectInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_1-1-参数" tabindex="-1">1.1. 参数 <a class="header-anchor" href="#_1-1-参数" aria-label="Permalink to &quot;1.1. 参数&quot;">​</a></h4><ul><li><strong>extensionId</strong>: <code>string</code> 可选 要连接的插件或应用的 <code>ID</code></li><li><strong>connectInfo</strong>: <code>object</code> 可选 <ul><li><strong>includeTlsChannelId</strong>: <code>boolean</code> 可选 对于正在监听连接事件的进程，是否将 <code>TLS</code> 通道 <code>ID</code> 传递到 <code>onConnectExternal</code></li><li><strong>name</strong>: <code>string</code> 可选 对于正在监听连接事件的进程，此参数将传递到 <code>onConnect</code></li></ul></li></ul><h4 id="_1-2-返回" tabindex="-1">1.2. 返回 <a class="header-anchor" href="#_1-2-返回" aria-label="Permalink to &quot;1.2. 返回&quot;">​</a></h4><ul><li><code>Port</code> 可以发送和接收消息的端口</li></ul><h3 id="_2-connectnative" tabindex="-1">2. <code>connectNative()</code> <a class="header-anchor" href="#_2-connectnative" aria-label="Permalink to &quot;2. \`connectNative()\`&quot;">​</a></h3><blockquote><p>连接到主机中的原生应用</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connectNative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  application: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-1-参数" tabindex="-1">2.1. 参数 <a class="header-anchor" href="#_2-1-参数" aria-label="Permalink to &quot;2.1. 参数&quot;">​</a></h4><ul><li><strong>application</strong>: <code>string</code> 要连接的已注册应用的名称。</li></ul><h4 id="_2-2-返回" tabindex="-1">2.2. 返回 <a class="header-anchor" href="#_2-2-返回" aria-label="Permalink to &quot;2.2. 返回&quot;">​</a></h4><ul><li><code>Port</code> 可通过应用发送和接收消息的端口</li></ul><h3 id="_3-getbackgroundpage" tabindex="-1">3. <code>getBackgroundPage()</code> <a class="header-anchor" href="#_3-getbackgroundpage" aria-label="Permalink to &quot;3. \`getBackgroundPage()\`&quot;">​</a></h3><blockquote><p>检索当前插件/应用中运行的后台网页的 <code>JavaScript“window”</code> 对象</p></blockquote><p>仅限 <code>Popup</code> 页面使用</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBackgroundPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_3-1-参数" tabindex="-1">3.1. 参数 <a class="header-anchor" href="#_3-1-参数" aria-label="Permalink to &quot;3.1. 参数&quot;">​</a></h4><ul><li><strong>callback</strong> 可选 <code>callback</code> 参数如下所示：</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">backgroundPage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Window</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>backgroundPage</strong>: <code>Window</code> 可选 背景网页的 <code>JavaScript“window”</code> 对象。</li></ul><h4 id="_3-2-返回" tabindex="-1">3.2. 返回 <a class="header-anchor" href="#_3-2-返回" aria-label="Permalink to &quot;3.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;Window|undefined&gt;</strong></li></ul><h3 id="_4-getcontexts" tabindex="-1">4. <code>getContexts()</code> <a class="header-anchor" href="#_4-getcontexts" aria-label="Permalink to &quot;4. \`getContexts()\`&quot;">​</a></h3><blockquote><p>提取与此插件相关联的有效上下文的相关信息</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getContexts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  filter: ContextFilter,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_4-1-参数" tabindex="-1">4.1. 参数 <a class="header-anchor" href="#_4-1-参数" aria-label="Permalink to &quot;4.1. 参数&quot;">​</a></h4><ul><li><strong>filter</strong>: <code>ContextFilter</code> 用于查找匹配上下文的过滤条件</li><li><strong>callback: function 可选: (contexts: ExtensionContext[])=&gt;void</strong><ul><li><strong>contexts</strong>: <code>ExtensionContext</code>[] 匹配的上下文</li></ul></li></ul><h4 id="_4-2-返回" tabindex="-1">4.2. 返回 <a class="header-anchor" href="#_4-2-返回" aria-label="Permalink to &quot;4.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;<strong>ExtensionContext</strong>[]&gt;</strong></li></ul><h3 id="_5-getmanifest" tabindex="-1">5. <code>getManifest()</code> <a class="header-anchor" href="#_5-getmanifest" aria-label="Permalink to &quot;5. \`getManifest()\`&quot;">​</a></h3><blockquote><p>从清单中返回有关应用或插件的详细信息，返回的对象是完整清单文件的序列化内容。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getManifest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_5-1-返回" tabindex="-1">5.1 返回 <a class="header-anchor" href="#_5-1-返回" aria-label="Permalink to &quot;5.1 返回&quot;">​</a></h4><ul><li><strong>object</strong>: <code>manifest</code> 详情</li></ul><h3 id="_6-getpackagedirectoryentry" tabindex="-1">6. <code>getPackageDirectoryEntry()</code> <a class="header-anchor" href="#_6-getpackagedirectoryentry" aria-label="Permalink to &quot;6. \`getPackageDirectoryEntry()\`&quot;">​</a></h3><blockquote><p>返回软件包目录的 DirectoryEntry。</p></blockquote><p>只能在 <code>popup</code> 页面调用</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPackageDirectoryEntry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_6-1-参数" tabindex="-1">6.1. 参数 <a class="header-anchor" href="#_6-1-参数" aria-label="Permalink to &quot;6.1. 参数&quot;">​</a></h4><ul><li><strong>callback：function 可选</strong>callback 参数如下所示：(directoryEntry:DirectoryEntry)=&gt;void <ul><li><strong>directoryEntry：DirectoryEntry</strong></li></ul></li></ul><h4 id="_6-2-返回" tabindex="-1">6.2. 返回 <a class="header-anchor" href="#_6-2-返回" aria-label="Permalink to &quot;6.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;DirectoryEntry&gt;</strong></li></ul><h3 id="_7-getplatforminfo" tabindex="-1">7. <code>getPlatformInfo()</code> <a class="header-anchor" href="#_7-getplatforminfo" aria-label="Permalink to &quot;7. \`getPlatformInfo()\`&quot;">​</a></h3><blockquote><p>返回有关当前平台的信息。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlatformInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_7-1-参数" tabindex="-1">7.1. 参数 <a class="header-anchor" href="#_7-1-参数" aria-label="Permalink to &quot;7.1. 参数&quot;">​</a></h4><ul><li><strong>callback：function 可选 (platformInfo:PlatformInfo)=&gt;void</strong><ul><li><strong>platformInfo</strong>: <code>PlatformInfo</code></li></ul></li></ul><h4 id="_7-2-返回" tabindex="-1">7.2. 返回 <a class="header-anchor" href="#_7-2-返回" aria-label="Permalink to &quot;7.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;<strong>PlatformInfo</strong>&gt;</strong></li></ul><h3 id="_8-geturl" tabindex="-1">8. <code>getURL()</code> <a class="header-anchor" href="#_8-geturl" aria-label="Permalink to &quot;8. \`getURL()\`&quot;">​</a></h3><blockquote><p>根据路径获取对应的网址 URL</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path:string)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_8-1-参数" tabindex="-1">8.1. 参数 <a class="header-anchor" href="#_8-1-参数" aria-label="Permalink to &quot;8.1. 参数&quot;">​</a></h4><ul><li><strong>path</strong>：<code>string</code> 应用/插件中资源的路径，以相对于其安装目录表示。</li></ul><h4 id="_8-2-返回" tabindex="-1">8.2. 返回 <a class="header-anchor" href="#_8-2-返回" aria-label="Permalink to &quot;8.2. 返回&quot;">​</a></h4><ul><li><code>string</code> 对应的网址 <code>URL</code></li></ul><h3 id="_9-openoptionspage" tabindex="-1">9. <code>openOptionsPage()</code> <a class="header-anchor" href="#_9-openoptionspage" aria-label="Permalink to &quot;9. \`openOptionsPage()\`&quot;">​</a></h3><blockquote><p>打开插件的选项页面</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openOptionsPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_9-1-参数" tabindex="-1">9.1. 参数 <a class="header-anchor" href="#_9-1-参数" aria-label="Permalink to &quot;9.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function 可选</strong>()=&gt;void</li></ul><h4 id="_9-2-返回" tabindex="-1">9.2. 返回 <a class="header-anchor" href="#_9-2-返回" aria-label="Permalink to &quot;9.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;void&gt;</strong></li></ul><h3 id="_10-reload" tabindex="-1">10. <code>reload()</code> <a class="header-anchor" href="#_10-reload" aria-label="Permalink to &quot;10. \`reload()\`&quot;">​</a></h3><blockquote><p>重新加载应用或插件。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_11-requestupdatecheck" tabindex="-1">11. <code>requestUpdateCheck()</code> <a class="header-anchor" href="#_11-requestupdatecheck" aria-label="Permalink to &quot;11. \`requestUpdateCheck()\`&quot;">​</a></h3><blockquote><p>对此应用程序/插件进行立即更新检查。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requestUpdateCheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_11-1-参数" tabindex="-1">11.1. 参数 <a class="header-anchor" href="#_11-1-参数" aria-label="Permalink to &quot;11.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function 可选 (result:object)=&gt;void</strong><ul><li><strong>result</strong>: object <ul><li><strong>status</strong>: RequestUpdateCheckStatus 更新检查的结果。</li><li><strong>version</strong>: string 可选 如果有可用更新，则此字段包含可用更新的版本。</li></ul></li></ul></li></ul><h4 id="_11-2-返回" tabindex="-1">11.2. 返回 <a class="header-anchor" href="#_11-2-返回" aria-label="Permalink to &quot;11.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;object&gt;</strong></li></ul><h3 id="_12-restart" tabindex="-1">12. <code>restart()</code> <a class="header-anchor" href="#_12-restart" aria-label="Permalink to &quot;12. \`restart()\`&quot;">​</a></h3><blockquote><p>当应用在自助服务终端模式下运行时，重启 <code>ChromeOS</code> 设备</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_13-restartafterdelay" tabindex="-1">13. <code>restartAfterDelay()</code> <a class="header-anchor" href="#_13-restartafterdelay" aria-label="Permalink to &quot;13. \`restartAfterDelay()\`&quot;">​</a></h3><blockquote><p>当应用在自助服务终端模式下运行时，在特定秒数后重启 <code>ChromeOS</code> 设备</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">restartAfterDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seconds:number,callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_13-1-参数" tabindex="-1">13.1. 参数 <a class="header-anchor" href="#_13-1-参数" aria-label="Permalink to &quot;13.1. 参数&quot;">​</a></h4><ul><li><strong>seconds</strong>: number 重新启动设备前的等待时间（以秒为单位），如果选择 -1，则可以取消预定的重新启动。</li><li><strong>callback</strong>: function 可选 ()=&gt;void</li></ul><h4 id="_13-2-返回" tabindex="-1">13.2. 返回 <a class="header-anchor" href="#_13-2-返回" aria-label="Permalink to &quot;13.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;void&gt;</strong></li></ul><h3 id="_14-sendmessage" tabindex="-1">14. <code>sendMessage()</code> <a class="header-anchor" href="#_14-sendmessage" aria-label="Permalink to &quot;14. \`sendMessage()\`&quot;">​</a></h3><blockquote><p>向插件/应用或其他插件/应用中的事件监听器发送一条消息</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extensionId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  message: any,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_14-1-参数" tabindex="-1">14.1. 参数 <a class="header-anchor" href="#_14-1-参数" aria-label="Permalink to &quot;14.1. 参数&quot;">​</a></h4><ul><li><strong>extensionId</strong>： <code>string</code> 可选 要向其发送消息的插件/应用的 ID。如果省略此选项，消息将会发送到自己的插件/应用。如果从网页发送消息以实现网络消息，则必须使用此标签。</li><li><strong>message: any</strong> 要发送的消息</li><li><strong>options</strong>: <code>object</code> 可选 <ul><li><strong>includeTlsChannelId</strong>: <code>boolean</code> 可选 对于正在监听连接事件的进程，是否将 TLS 通道 ID 传递到 <code>onMessageExternal</code></li></ul></li><li><strong>callback: function 可选 (response:any)=&gt;void</strong><ul><li><strong>response</strong>: <code>any</code> 消息的处理程序发送的 <code>JSON</code> 响应对象</li></ul></li></ul><h4 id="_14-2-返回" tabindex="-1">14.2. 返回 <a class="header-anchor" href="#_14-2-返回" aria-label="Permalink to &quot;14.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;any&gt;</strong></li></ul><h3 id="_15-sendnativemessage" tabindex="-1">15. <code>sendNativeMessage()</code> <a class="header-anchor" href="#_15-sendnativemessage" aria-label="Permalink to &quot;15. \`sendNativeMessage()\`&quot;">​</a></h3><blockquote><p>向原生应用发送单条消息。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendNativeMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  application: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  message: object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_15-1-参数" tabindex="-1">15.1. 参数 <a class="header-anchor" href="#_15-1-参数" aria-label="Permalink to &quot;15.1. 参数&quot;">​</a></h4><ul><li><strong>application</strong>: string 原生消息传递主机的名称。</li><li><strong>message</strong>: object 将传递给原生消息传递主机的消息。</li><li><strong>callback: function 可选 (response:any)=&gt;void</strong></li></ul><h4 id="_15-2-返回" tabindex="-1">15.2. 返回 <a class="header-anchor" href="#_15-2-返回" aria-label="Permalink to &quot;15.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;any&gt;</strong></li></ul><h3 id="_16-setuninstallurl" tabindex="-1">16. <code>setUninstallURL()</code> <a class="header-anchor" href="#_16-setuninstallurl" aria-label="Permalink to &quot;16. \`setUninstallURL()\`&quot;">​</a></h3><blockquote><p>设置卸载后要访问的网址</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setUninstallURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url:string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_16-1-参数" tabindex="-1">16.1. 参数 <a class="header-anchor" href="#_16-1-参数" aria-label="Permalink to &quot;16.1. 参数&quot;">​</a></h4><ul><li><strong>url</strong>: string 要在卸载插件后打开的网址</li><li><strong>callback: function（可选）</strong>()=&gt;void</li></ul><h4 id="_16-2-返回" tabindex="-1">16.2. 返回 <a class="header-anchor" href="#_16-2-返回" aria-label="Permalink to &quot;16.2. 返回&quot;">​</a></h4><ul><li><strong>Promise&lt;void&gt;</strong></li></ul><h2 id="八、chrome-runtime-api-事件-events" tabindex="-1">八、<code>Chrome.runtime API</code> 事件（<code>Events</code>） <a class="header-anchor" href="#八、chrome-runtime-api-事件-events" aria-label="Permalink to &quot;八、\`Chrome.runtime API\` 事件（\`Events\`）&quot;">​</a></h2><blockquote><p>从插件进程或内容脚本，通过 runtime.connect 建立连接时触发。</p></blockquote><h3 id="_1-onconnect" tabindex="-1">1. <code>onConnect</code> <a class="header-anchor" href="#_1-onconnect" aria-label="Permalink to &quot;1. \`onConnect\`&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onConnect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_1-1-参数-1" tabindex="-1">1.1. 参数 <a class="header-anchor" href="#_1-1-参数-1" aria-label="Permalink to &quot;1.1. 参数&quot;">​</a></h4><ul><li><strong>callback：function: (port:Port)=&gt;void</strong></li></ul><h3 id="_2-onconnectexternal" tabindex="-1">2. <code>onConnectExternal</code> <a class="header-anchor" href="#_2-onconnectexternal" aria-label="Permalink to &quot;2. \`onConnectExternal\`&quot;">​</a></h3><blockquote><p>从其他插件通过 runtime.connect 建立连接时触发。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onConnectExternal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-1-参数-1" tabindex="-1">2.1. 参数 <a class="header-anchor" href="#_2-1-参数-1" aria-label="Permalink to &quot;2.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function: (port:Port)=&gt;void</strong></li></ul><h3 id="_3-onconnectnative" tabindex="-1">3. <code>onConnectNative</code> <a class="header-anchor" href="#_3-onconnectnative" aria-label="Permalink to &quot;3. \`onConnectNative\`&quot;">​</a></h3><blockquote><p>从原生应用建立连接时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onConnectNative.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_3-1-参数-1" tabindex="-1">3.1. 参数 <a class="header-anchor" href="#_3-1-参数-1" aria-label="Permalink to &quot;3.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function: (port:Port)=&gt;void</strong></li></ul><h3 id="_4-oninstalled" tabindex="-1">4. <code>onInstalled</code> <a class="header-anchor" href="#_4-oninstalled" aria-label="Permalink to &quot;4. \`onInstalled\`&quot;">​</a></h3><blockquote><p>首次安装插件、将插件更新到新版本以及 Chrome 更新到新版本时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onInstalled.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_4-1-参数-1" tabindex="-1">4.1. 参数 <a class="header-anchor" href="#_4-1-参数-1" aria-label="Permalink to &quot;4.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function: (details:object)=&gt;void</strong><ul><li><strong>details:object</strong><ul><li><strong>id</strong>: string 可选 表示已更新的导入共享模块插件的 ID</li><li><strong>previousVersion</strong>: string 可选 表示插件的旧版本，只是刚被更新过</li><li><strong>reason</strong>: OnInstalledReason 分派此事件的原因。</li></ul></li></ul></li></ul><h3 id="_5-onmessage" tabindex="-1">5. <code>onMessage</code> <a class="header-anchor" href="#_5-onmessage" aria-label="Permalink to &quot;5. \`onMessage\`&quot;">​</a></h3><blockquote><p>当消息从插件进程通过 runtime.sendMessage 或内容脚本通过 tabs.sendMessage 发送时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_5-1-参数" tabindex="-1">5.1. 参数 <a class="header-anchor" href="#_5-1-参数" aria-label="Permalink to &quot;5.1. 参数&quot;">​</a></h4><ul><li><strong>callback</strong>: function: <ul><li>message: any</li><li>sender: MessageSender</li><li>sendResponse:function：()=&gt;void</li><li><strong>return: boolean|undefined</strong></li></ul></li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MessageSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_6-onmessageexternal" tabindex="-1">6. <code>onMessageExternal</code> <a class="header-anchor" href="#_6-onmessageexternal" aria-label="Permalink to &quot;6. \`onMessageExternal\`&quot;">​</a></h3><blockquote><p>从其他插件/应用发送消息时触发通过 runtime.sendMessage。无法在内容脚本中使用。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessageExternal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_6-1-参数-1" tabindex="-1">6.1. 参数 <a class="header-anchor" href="#_6-1-参数-1" aria-label="Permalink to &quot;6.1. 参数&quot;">​</a></h4><ul><li><strong>callback: fubction</strong><ul><li>message:any</li><li>sender:MessageSender</li><li>sendResponse:function：()=&gt;void</li><li><strong>return: boolean|undefined</strong></li></ul></li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MessageSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_7-onrestartrequired" tabindex="-1">7. <code>onRestartRequired</code> <a class="header-anchor" href="#_7-onrestartrequired" aria-label="Permalink to &quot;7. \`onRestartRequired\`&quot;">​</a></h3><blockquote><p>当应用或运行该应用的设备需要重启时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onRestartRequired.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_7-1-参数-1" tabindex="-1">7.1. 参数 <a class="header-anchor" href="#_7-1-参数-1" aria-label="Permalink to &quot;7.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function: (reason: OnRestartRequiredReason)=&gt;void</strong></li></ul><h3 id="_8-onstartup" tabindex="-1">8. <code>onStartup</code> <a class="header-anchor" href="#_8-onstartup" aria-label="Permalink to &quot;8. \`onStartup\`&quot;">​</a></h3><blockquote><p>在安装了此插件的配置文件首次启动时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onStartup.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_8-1-参数-1" tabindex="-1">8.1. 参数 <a class="header-anchor" href="#_8-1-参数-1" aria-label="Permalink to &quot;8.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function</strong>：()=&gt;void</li></ul><h3 id="_9-onsuspend" tabindex="-1">9. <code>onSuspend</code> <a class="header-anchor" href="#_9-onsuspend" aria-label="Permalink to &quot;9. \`onSuspend\`&quot;">​</a></h3><blockquote><p>在取消加载之前被发送到事件页面</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onSuspend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_9-1-参数-1" tabindex="-1">9.1. 参数 <a class="header-anchor" href="#_9-1-参数-1" aria-label="Permalink to &quot;9.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function</strong>：()=&gt;void</li></ul><h3 id="_10-onsuspendcanceled" tabindex="-1">10. <code>onSuspendCanceled</code> <a class="header-anchor" href="#_10-onsuspendcanceled" aria-label="Permalink to &quot;10. \`onSuspendCanceled\`&quot;">​</a></h3><blockquote><p>在 onSuspend 之后发送</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onSuspendCanceled.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_10-1-参数" tabindex="-1">10.1. 参数 <a class="header-anchor" href="#_10-1-参数" aria-label="Permalink to &quot;10.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function</strong>：()=&gt;void</li></ul><h3 id="_11-onupdateavailable" tabindex="-1">11. <code>onUpdateAvailable</code> <a class="header-anchor" href="#_11-onupdateavailable" aria-label="Permalink to &quot;11. \`onUpdateAvailable\`&quot;">​</a></h3><blockquote><p>有可用更新，但由于应用当前正在运行而未立即安装时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onUpdateAvailable.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_11-1-参数-1" tabindex="-1">11.1. 参数 <a class="header-anchor" href="#_11-1-参数-1" aria-label="Permalink to &quot;11.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function</strong>：(details:object)=&gt;void</li></ul><h3 id="_12-onuserscriptconnect" tabindex="-1">12. <code>onUserScriptConnect</code> <a class="header-anchor" href="#_12-onuserscriptconnect" aria-label="Permalink to &quot;12. \`onUserScriptConnect\`&quot;">​</a></h3><blockquote><p>通过此插件中的用户脚本建立连接时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onUserScriptConnect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_12-1-参数" tabindex="-1">12.1. 参数 <a class="header-anchor" href="#_12-1-参数" aria-label="Permalink to &quot;12.1. 参数&quot;">​</a></h4><ul><li><strong>callback: function</strong>：(port:Port)=&gt;void</li></ul><h3 id="_13-onuserscriptmessage" tabindex="-1">13. <code>onUserScriptMessage</code> <a class="header-anchor" href="#_13-onuserscriptmessage" aria-label="Permalink to &quot;13. \`onUserScriptMessage\`&quot;">​</a></h3><blockquote><p>从与同一插件相关联的用户脚本发送消息时触发</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onUserScriptMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_13-1-参数-1" tabindex="-1">13.1. 参数 <a class="header-anchor" href="#_13-1-参数-1" aria-label="Permalink to &quot;13.1. 参数&quot;">​</a></h4><ul><li><strong>callback功能</strong>callback 参数如下所示： <ul><li>message: any</li><li>sender: MessageSender</li><li>sendResponse:function：()=&gt;void</li><li><strong>return: boolean|undefined</strong></li></ul></li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MessageSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="九、示例" tabindex="-1">九、示例 <a class="header-anchor" href="#九、示例" aria-label="Permalink to &quot;九、示例&quot;">​</a></h2><h3 id="_1-向网页添加图片" tabindex="-1">1. 向网页添加图片 <a class="header-anchor" href="#_1-向网页添加图片" aria-label="Permalink to &quot;1. 向网页添加图片&quot;">​</a></h3><p><code>content.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;img&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">img.src </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;logo.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-将数据从内容脚本发送到-service-worker" tabindex="-1">2. 将数据从内容脚本发送到 <code>Service Worker</code> <a class="header-anchor" href="#_2-将数据从内容脚本发送到-service-worker" aria-label="Permalink to &quot;2. 将数据从内容脚本发送到 \`Service Worker\`&quot;">​</a></h3><p><code>content.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;get-user-data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;received user data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, response);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  initializeUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>service-worker.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  username: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;demo-user&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;get-user-data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-收集关于卸载的反馈" tabindex="-1">3. 收集关于卸载的反馈 <a class="header-anchor" href="#_3-收集关于卸载的反馈" aria-label="Permalink to &quot;3. 收集关于卸载的反馈&quot;">​</a></h3><p><code>service-worker.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onInstalled.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">details</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (details.reason </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.runtime.OnInstalledReason.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">INSTALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setUninstallURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://juejin.cn/user/2409752520033768/posts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,270),p=[h];function o(d,k,c,E,u,g){return a(),i("div",null,p)}const y=s(r,[["render",o]]);export{m as __pageData,y as default};
