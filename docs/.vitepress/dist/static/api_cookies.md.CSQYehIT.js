import{_ as e,c as o,o as i,a4 as a,a8 as s,a9 as l,aa as n,ab as c,ac as t}from"./chunks/framework.DUbQYUwk.js";const y=JSON.parse('{"title":"Chrome.cookie API 解析","description":"","frontmatter":{},"headers":[],"relativePath":"api/cookies.md","filePath":"api/cookies.md"}'),d={name:"api/cookies.md"},r=a('<h1 id="chrome-cookie-api-解析" tabindex="-1"><code>Chrome.cookie API</code> 解析 <a class="header-anchor" href="#chrome-cookie-api-解析" aria-label="Permalink to &quot;`Chrome.cookie API` 解析&quot;">​</a></h1><p>前端开发肯定少不了和 <code>cookie</code> 打交道，此文较详细的介绍下 <code>chrome.cookie</code> 的 <code>API</code> 以及在 <code>popup、service worker、content</code> 中如何获取的</p><h2 id="一、各模块-chrome-cookies-内容" tabindex="-1">一、各模块 <code>chrome.cookies</code> 内容 <a class="header-anchor" href="#一、各模块-chrome-cookies-内容" aria-label="Permalink to &quot;一、各模块 `chrome.cookies` 内容&quot;">​</a></h2><h3 id="_1-service-worker-中-runtime-内容" tabindex="-1">1. <code>Service worker</code> 中 <code>runtime</code> 内容 <a class="header-anchor" href="#_1-service-worker-中-runtime-内容" aria-label="Permalink to &quot;1. `Service worker` 中 `runtime` 内容&quot;">​</a></h3><p><img src="'+s+'" alt="service cookies" loading="lazy"></p><h3 id="_2-action-中-runtime-内容" tabindex="-1">2. <code>Action</code> 中 <code>runtime</code> 内容 <a class="header-anchor" href="#_2-action-中-runtime-内容" aria-label="Permalink to &quot;2. `Action` 中 `runtime` 内容&quot;">​</a></h3><p><img src="'+l+'" alt="action cookies" loading="lazy"></p><h3 id="_3-content-中-runtime-内容" tabindex="-1">3. <code>Content</code> 中 <code>runtime</code> 内容 <a class="header-anchor" href="#_3-content-中-runtime-内容" aria-label="Permalink to &quot;3. `Content` 中 `runtime` 内容&quot;">​</a></h3><p><img src="'+n+`" alt="content cookies" loading="lazy"></p><h2 id="二、权限-permissions" tabindex="-1">二、权限（Permissions） <a class="header-anchor" href="#二、权限-permissions" aria-label="Permalink to &quot;二、权限（Permissions）&quot;">​</a></h2><p>如果需使用 <code>Cookie API</code>，需要在 <code>manifest.json</code> 文件中添加权限（<code>Permissions</code>）和主机权限（<code>host_permissions</code>）字段</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [    </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;cookies&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host_permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://*.lkcoffee.com/*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>比如，我需要获取 <code>domain</code> 为 <code>.lkcoffee.com</code> 的 <code>cookie</code>，就需要在 <code>host_permissions</code> 中进行 <code>host</code> 的配置</p><h2 id="三、chrome-cookies-api-类型-types" tabindex="-1">三、<code>Chrome.cookies API</code> 类型（<code>Types</code>） <a class="header-anchor" href="#三、chrome-cookies-api-类型-types" aria-label="Permalink to &quot;三、\`Chrome.cookies API\` 类型（\`Types\`）&quot;">​</a></h2><h3 id="_1-cookie" tabindex="-1">1. <code>Cookie</code> <a class="header-anchor" href="#_1-cookie" aria-label="Permalink to &quot;1. \`Cookie\`&quot;">​</a></h3><blockquote><p>表示关于 <code>HTTP Cookie</code> 的信息。</p></blockquote><h4 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h4><ul><li><code>domain: string</code><ul><li><code>cookie</code> 的 <code>domain</code></li></ul></li><li><code>expirationDate: number</code> 可选 <ul><li><code>Cookie</code> 的有效期</li></ul></li><li><code>hostOnly: boolean</code><ul><li><code>host-only</code> 时为 <code>true</code></li></ul></li><li><code>httpOnly: boolean</code><ul><li><code>httpOnly</code> 时为 <code>true</code></li></ul></li><li><code>name: string</code><ul><li>名称</li></ul></li><li><code>partitionKey: CookiePartitionKey</code> 可选 <ul><li>用于通过分区属性读取或修改 <code>Cookie</code> 的分区键。</li></ul></li><li><code>path: string</code><ul><li>路径</li></ul></li><li><code>sameSite: SameSiteStatus</code><ul><li>同网站状态。</li></ul></li><li><code>secure: boolean</code><ul><li><code>Secure</code> 值</li></ul></li><li><code>session: booean</code><ul><li>是否是会话</li></ul></li><li><code>storeId: string</code><ul><li>包含此 <code>Cookie</code> 的 <code>Cookie</code> 存储区的 <code>ID</code>，如 <code>getAllCookieStores()</code> 中所提供。</li></ul></li><li><code>value: string</code><ul><li><code>cookie</code> 值</li></ul></li></ul><h3 id="_2-cookiedetails" tabindex="-1">2. <code>CookieDetails</code> <a class="header-anchor" href="#_2-cookiedetails" aria-label="Permalink to &quot;2. \`CookieDetails\`&quot;">​</a></h3><blockquote><p>用于标识 <code>Cookie</code> 的详细信息。</p></blockquote><h4 id="属性-1" tabindex="-1">属性 <a class="header-anchor" href="#属性-1" aria-label="Permalink to &quot;属性&quot;">​</a></h4><ul><li><code>name: string</code><ul><li>要访问的 <code>Cookie</code> 的名称。</li></ul></li><li><code>partitionKey: CookiePartitionKey</code> 可选 <ul><li>用于通过分区属性读取或修改 <code>Cookie</code> 的分区键。</li></ul></li><li><code>storeId: string</code> 可选 <ul><li>要在其中查找 <code>Cookie</code> 的 <code>Cookie</code> 存储区的 <code>ID</code></li></ul></li><li><code>url: string</code><ul><li>与要访问的 <code>Cookie</code> 相关联的网址。</li></ul></li></ul><h3 id="_3-cookiepartitionkey" tabindex="-1">3. <code>CookiePartitionKey</code> <a class="header-anchor" href="#_3-cookiepartitionkey" aria-label="Permalink to &quot;3. \`CookiePartitionKey\`&quot;">​</a></h3><blockquote><p>表示分区 <code>Cookie</code> 的分区键。</p></blockquote><h4 id="属性-2" tabindex="-1">属性 <a class="header-anchor" href="#属性-2" aria-label="Permalink to &quot;属性&quot;">​</a></h4><ul><li><code>topLevelSite: string</code> 可选 <ul><li>提供分区 <code>Cookie</code> 的 <code>top-level</code></li></ul></li></ul><h3 id="_4-cookiestore" tabindex="-1">4. <code>CookieStore</code> <a class="header-anchor" href="#_4-cookiestore" aria-label="Permalink to &quot;4. \`CookieStore\`&quot;">​</a></h3><blockquote><p>表示浏览器中的 <code>Cookie</code> 存储</p></blockquote><h4 id="属性-3" tabindex="-1">属性 <a class="header-anchor" href="#属性-3" aria-label="Permalink to &quot;属性&quot;">​</a></h4><ul><li><code>id: string</code><ul><li><code>Cookie</code> 存储区的唯一标识符。</li></ul></li><li><code>tabIds: number[]</code><ul><li>共享此 <code>Cookie</code> 存储区的所有浏览器标签页的标识符。</li></ul></li></ul><h3 id="_5-onchangedcause" tabindex="-1">5. <code>OnChangedCause</code> <a class="header-anchor" href="#_5-onchangedcause" aria-label="Permalink to &quot;5. \`OnChangedCause\`&quot;">​</a></h3><blockquote><p><code>Cookie</code> 发生更改的根本原因。</p></blockquote><blockquote><p>如果 <code>Cookie</code> 已插入或通过显式调用 <code>chrome.cookies.remove</code> 被移除，为 <code>explicit</code>。如果 <code>Cookie</code> 是因过期而自动移除的，为 <code>expired</code>。如果 <code>Cookie</code> 因被已过期的失效日期覆盖而被移除，为 <code>expired_overwrite</code>。如果 <code>Cookie</code> 因垃圾回收而自动移除，为 <code>evicted</code>。如果 <code>Cookie</code> 因 <code>set</code> 调用覆盖而自动移除，为 <code>overwrite</code>。</p></blockquote><h4 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h4><ul><li><code>evicted</code></li><li><code>expired</code></li><li><code>explicit</code></li><li><code>expired_overwrite</code></li><li><code>overwrite</code></li></ul><h3 id="_6-samesitestatus" tabindex="-1">6. SameSiteStatus <a class="header-anchor" href="#_6-samesitestatus" aria-label="Permalink to &quot;6. SameSiteStatus&quot;">​</a></h3><blockquote><p><code>Cookie</code> 的 <code>SameSite</code> 状态。</p></blockquote><blockquote><p><code>no_restriction</code>为 <code>SameSite=None</code>，<code>lax</code> 为<code>SameSite=Lax</code>，<code>strict</code> 为 <code>SameSite=Strict</code>，<code>unspecified</code> 为没有设置 <code>SameSite</code> 属性的 <code>Cookie</code>。</p></blockquote><h4 id="枚举-1" tabindex="-1">枚举 <a class="header-anchor" href="#枚举-1" aria-label="Permalink to &quot;枚举&quot;">​</a></h4><ul><li><code>no_restriction</code>：<code>SameSite=None</code></li><li><code>lax</code>：<code>SameSite=Lax</code></li><li><code>strict</code>：<code>SameSite=Strict</code></li><li><code>unspecified</code>：没有设置 <code>SameSite</code></li></ul><h2 id="四、chrome-cookies-api-方法-methods" tabindex="-1">四、<code>Chrome.cookies API</code> 方法（<code>Methods</code>） <a class="header-anchor" href="#四、chrome-cookies-api-方法-methods" aria-label="Permalink to &quot;四、\`Chrome.cookies API\` 方法（\`Methods\`）&quot;">​</a></h2><h3 id="_1-get" tabindex="-1">1. <code>get()</code> <a class="header-anchor" href="#_1-get" aria-label="Permalink to &quot;1. \`get()\`&quot;">​</a></h3><blockquote><p>检索单个 <code>Cookie</code> 的相关信息。如果指定网址存在多个同名的 <code>Cookie</code>，则返回路径最长的 <code>Cookie</code>。对于具有相同路径长度的 <code>Cookie</code>，系统将返回创建时间最早的 <code>Cookie</code>。</p></blockquote><h4 id="_1-1-示例" tabindex="-1">1.1 示例 <a class="header-anchor" href="#_1-1-示例" aria-label="Permalink to &quot;1.1 示例&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chrome.cookies.get(</span></span>
<span class="line"><span>  details:</span></span>
<span class="line"><span>  CookieDetails,</span></span>
<span class="line"><span>  callback?:</span></span>
<span class="line"><span>  function,</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_1-2-参数" tabindex="-1">1.2 参数 <a class="header-anchor" href="#_1-2-参数" aria-label="Permalink to &quot;1.2 参数&quot;">​</a></h4><ul><li><code>details: CookieDetails</code></li><li><code>callback: function</code> 可选 <ul><li><code>(cookie?: Cookie)=&gt;void</code></li></ul></li></ul><h4 id="_1-3-返回" tabindex="-1">1.3 返回 <a class="header-anchor" href="#_1-3-返回" aria-label="Permalink to &quot;1.3 返回&quot;">​</a></h4><ul><li><code>Promise&lt;Cookie|undefined&gt;</code></li></ul><h3 id="_2-getall" tabindex="-1">2. <code>getAll()</code> <a class="header-anchor" href="#_2-getall" aria-label="Permalink to &quot;2. \`getAll()\`&quot;">​</a></h3><blockquote><p>从单个 Cookie 存储区中检索符合指定信息的所有 Cookie。返回的 Cookie 将进行排序，路径最长的 Cookie 排在最前面。如果多个 Cookie 具有相同的路径长度，创建时间最早的 Cookie 会排在最前面。此方法仅检索插件拥有主机权限的网域的 Cookie。</p></blockquote><h4 id="_2-1-示例" tabindex="-1">2.1 示例 <a class="header-anchor" href="#_2-1-示例" aria-label="Permalink to &quot;2.1 示例&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chrome.cookies.getAll(</span></span>
<span class="line"><span>  details:</span></span>
<span class="line"><span>  object,</span></span>
<span class="line"><span>  callback?:</span></span>
<span class="line"><span>  function,</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_2-2-参数" tabindex="-1">2.2 参数 <a class="header-anchor" href="#_2-2-参数" aria-label="Permalink to &quot;2.2 参数&quot;">​</a></h4><ul><li><code>details: object</code><ul><li><code>domain: string</code> 可选</li><li><code>name: string</code> 可选</li><li><code>partitionKey: CookiePartitionKey</code> 可选 <ul><li>用于通过分区属性读取或修改 <code>Cookie</code> 的分区键。</li></ul></li><li><code>path: string</code> 可选</li><li><code>secure: boolean</code> 可选</li><li><code>session: boolean</code> 可选</li><li><code>storeId: string</code> 可选</li><li><code>url: string</code> 可选</li></ul></li><li><code>callback: function</code> 可选 <ul><li><code>(cookies:Cookie[])=&gt;void</code></li></ul></li></ul><h4 id="_2-3-返回" tabindex="-1">2.3 返回 <a class="header-anchor" href="#_2-3-返回" aria-label="Permalink to &quot;2.3 返回&quot;">​</a></h4><ul><li><code>Promise&lt;Cookie[]&gt;</code></li></ul><h3 id="_3-getallcookiestores" tabindex="-1">3. <code>getAllCookieStores()</code> <a class="header-anchor" href="#_3-getallcookiestores" aria-label="Permalink to &quot;3. \`getAllCookieStores()\`&quot;">​</a></h3><blockquote><p>列出所有现有的 <code>Cookie</code> 存储。</p></blockquote><h4 id="_3-1-示例" tabindex="-1">3.1 示例 <a class="header-anchor" href="#_3-1-示例" aria-label="Permalink to &quot;3.1 示例&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chrome.cookies.getAllCookieStores(</span></span>
<span class="line"><span>  callback?:</span></span>
<span class="line"><span>  function,</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_3-2参数" tabindex="-1">3.2参数 <a class="header-anchor" href="#_3-2参数" aria-label="Permalink to &quot;3.2参数&quot;">​</a></h4><ul><li><code>callback: function</code> 可选 <ul><li><code>(cookieStores: CookieStore[])=&gt;void</code></li></ul></li></ul><h4 id="_3-3-返回" tabindex="-1">3.3 返回 <a class="header-anchor" href="#_3-3-返回" aria-label="Permalink to &quot;3.3 返回&quot;">​</a></h4><ul><li><code>Promise&lt;CookieStore[]&gt;</code></li></ul><h3 id="_4-remove" tabindex="-1">4. <code>remove()</code> <a class="header-anchor" href="#_4-remove" aria-label="Permalink to &quot;4. \`remove()\`&quot;">​</a></h3><blockquote><p>按名称删除 Cookie。</p></blockquote><h4 id="_4-1-示例" tabindex="-1">4.1 示例 <a class="header-anchor" href="#_4-1-示例" aria-label="Permalink to &quot;4.1 示例&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chrome.cookies.remove(</span></span>
<span class="line"><span>  details:</span></span>
<span class="line"><span>  CookieDetails,</span></span>
<span class="line"><span>  callback?:</span></span>
<span class="line"><span>  function,</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_4-2-参数" tabindex="-1">4.2 参数 <a class="header-anchor" href="#_4-2-参数" aria-label="Permalink to &quot;4.2 参数&quot;">​</a></h4><ul><li><code>details: CookieDetails</code><ul><li><code>name: string</code></li><li><code>partitionKey: CookiePartitionKey</code> 可选 <ul><li>用于通过分区属性读取或修改 <code>Cookie</code> 的分区键。</li></ul></li><li><code>storeId: string</code></li><li><code>url: string</code></li></ul></li><li><code>callback: function</code> 可选 <ul><li><code>(details?:object)=&gt;void</code></li></ul></li></ul><h4 id="_4-3-返回" tabindex="-1">4.3 返回 <a class="header-anchor" href="#_4-3-返回" aria-label="Permalink to &quot;4.3 返回&quot;">​</a></h4><ul><li><code>Promise&lt;object|undefined&gt;</code></li></ul><h3 id="_5-set" tabindex="-1">5. <code>set()</code> <a class="header-anchor" href="#_5-set" aria-label="Permalink to &quot;5. \`set()\`&quot;">​</a></h3><blockquote><p>使用指定的 <code>Cookie</code> 数据设置 <code>Cookie</code>；可能会覆盖等效的 <code>Cookie</code>（如果存在）。</p></blockquote><h4 id="_5-1-示例" tabindex="-1">5.1 示例 <a class="header-anchor" href="#_5-1-示例" aria-label="Permalink to &quot;5.1 示例&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chrome.cookies.set(</span></span>
<span class="line"><span>  details:</span></span>
<span class="line"><span>  object,</span></span>
<span class="line"><span>  callback?:</span></span>
<span class="line"><span>  function,</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_5-2-参数" tabindex="-1">5.2 参数 <a class="header-anchor" href="#_5-2-参数" aria-label="Permalink to &quot;5.2 参数&quot;">​</a></h4><ul><li><code>details: object</code><ul><li><code>domain: string</code> 可选 <ul><li><code>cookie</code> 的 <code>domain</code></li></ul></li><li><code>expirationDate: number</code> 可选 <ul><li><code>Cookie</code> 的有效期</li></ul></li><li><code>httpOnly: boolean</code> 可选 <ul><li><code>httpOnly</code> 时为 <code>true</code></li></ul></li><li><code>name: string</code> 可选 <ul><li>名称</li></ul></li><li><code>partitionKey: CookiePartitionKey</code> 可选 <ul><li>用于通过分区属性读取或修改 <code>Cookie</code> 的分区键。</li></ul></li><li><code>path: string</code> 可选 <ul><li>路径</li></ul></li><li><code>sameSite: SameSiteStatus</code> 可选 <ul><li>同网站状态。</li></ul></li><li><code>secure: boolean</code> 可选 <ul><li><code>Secure</code> 值</li></ul></li><li><code>storeId: string</code> 可选 <ul><li>包含此 <code>Cookie</code> 的 <code>Cookie</code> 存储区的 <code>ID</code>，如 <code>getAllCookieStores()</code> 中所提供。</li></ul></li><li><code>url: string</code></li><li><code>value: string</code> 可选 <ul><li><code>cookie</code> 值</li></ul></li></ul></li><li><code>callback: function</code> 可选 <ul><li><p><code>(cookie?:Cookie)=&gt;void</code></p></li><li><p>饼干</p><p><a href="https://developer.chrome.com/docs/extensions/reference/api/cookies?hl=zh-cn#type-Cookie" target="_blank" rel="noreferrer">Cookie</a> 可选</p><p>包含有关已设置的 Cookie 的详细信息。如果设置因任何原因失败，此值将为“null”并设置为 <a href="https://developer.chrome.com/docs/extensions/reference/runtime/?hl=zh-cn#property-lastError" target="_blank" rel="noreferrer"><code>runtime.lastError</code></a>。</p></li></ul></li></ul><h4 id="_5-3返回" tabindex="-1">5.3返回 <a class="header-anchor" href="#_5-3返回" aria-label="Permalink to &quot;5.3返回&quot;">​</a></h4><ul><li><code>Promise&lt;Cookie|undefined&gt;</code></li></ul><h2 id="五、action-popup-模块获取-cookies" tabindex="-1">五、<code>Action Popup</code> 模块获取 <code>Cookies</code> <a class="header-anchor" href="#五、action-popup-模块获取-cookies" aria-label="Permalink to &quot;五、\`Action Popup\` 模块获取 \`Cookies\`&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据 domain 获取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cookies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.cookies.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ domain:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.lkcoffee.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;popup cookies---&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cookies)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据 url 获取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> urlCookies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.cookies.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ url: url })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;popup urlCookies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, urlCookies);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+c+'" alt="cookie 获取" loading="lazy"></p><h2 id="六、background-service-worker-模块获取-cookies" tabindex="-1">六、<code>Background Service Worker</code> 模块获取 <code>Cookies</code> <a class="header-anchor" href="#六、background-service-worker-模块获取-cookies" aria-label="Permalink to &quot;六、`Background Service Worker` 模块获取 `Cookies`&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cookies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.cookies.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ domain:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.lkcoffee.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;service worker cookies---&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cookies)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="'+t+'" alt="cookie 获取" loading="lazy"></p><h2 id="七、content-scripts-模块获取-cookies" tabindex="-1">七、<code>Content Scripts</code> 模块获取 <code>Cookies</code> <a class="header-anchor" href="#七、content-scripts-模块获取-cookies" aria-label="Permalink to &quot;七、`Content Scripts` 模块获取 `Cookies`&quot;">​</a></h2><p>因为 <code>Content Scripts</code> 是注入当前页面的，所以和 <code>web</code> 一样获取即可</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.cookie</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',90),p=[r];function h(k,u,b,m,g,C){return i(),o("div",null,p)}const _=e(d,[["render",h]]);export{y as __pageData,_ as default};
