import{_ as s,c as i,o as a,a4 as n,aF as e,aG as l,aH as t,aI as p,aJ as h,aK as k,aL as r,aM as d,aN as E,aO as o,aP as c,aQ as g}from"./chunks/framework.DUbQYUwk.js";const D=JSON.parse('{"title":"Chrome 插件各模块之间的消息传递","description":"","frontmatter":{},"headers":[],"relativePath":"core/message.md","filePath":"core/message.md"}'),u={name:"core/message.md"},y=n('<h1 id="chrome-插件各模块之间的消息传递" tabindex="-1"><code>Chrome</code> 插件各模块之间的消息传递 <a class="header-anchor" href="#chrome-插件各模块之间的消息传递" aria-label="Permalink to &quot;`Chrome` 插件各模块之间的消息传递&quot;">​</a></h1><h2 id="一、消息传递" tabindex="-1">一、消息传递 <a class="header-anchor" href="#一、消息传递" aria-label="Permalink to &quot;一、消息传递&quot;">​</a></h2><h3 id="_1-消息传递分类" tabindex="-1">1. 消息传递分类 <a class="header-anchor" href="#_1-消息传递分类" aria-label="Permalink to &quot;1. 消息传递分类&quot;">​</a></h3><ul><li><code>Chrome</code> 插件的 <code>Action</code>、<code>Background</code> 和 <code>content_script</code> 三个模块之间的信息传输</li><li>插件和插件之间的信息传输</li><li>网页向插件进行信息传输</li><li>与原生应用进行消息传递</li></ul><h3 id="_2-消息传递-api" tabindex="-1">2. 消息传递 <code>API</code> <a class="header-anchor" href="#_2-消息传递-api" aria-label="Permalink to &quot;2. 消息传递 `API`&quot;">​</a></h3><ul><li><code>runtime API</code><ul><li><code>runtime.sendMessage()</code></li><li><code>runtime.onMessage.addListener()</code></li><li><code>runtime.connect()</code></li><li><code>runtime.onConnect.addListener()</code></li><li><code>runtime.onMessageExternal</code></li><li><code>runtime.onConnectExternal</code></li><li>...</li></ul></li><li><code>tabs API</code><ul><li><code>tabs.sendMessage()</code></li><li><code>tabs.connect()</code></li><li>...</li></ul></li></ul><h3 id="_3-消息传递-api-类别" tabindex="-1">3. 消息传递 <code>API</code> 类别 <a class="header-anchor" href="#_3-消息传递-api-类别" aria-label="Permalink to &quot;3. 消息传递 `API` 类别&quot;">​</a></h3><ul><li>一次性请求 <ul><li><code>sendMessage</code></li></ul></li><li>长期连接(允许发送多条消息) <ul><li><code>connect</code></li></ul></li></ul><h2 id="二、chrome-字段展示" tabindex="-1">二、<code>chrome</code> 字段展示 <a class="header-anchor" href="#二、chrome-字段展示" aria-label="Permalink to &quot;二、`chrome` 字段展示&quot;">​</a></h2><h3 id="_1-action-chrome-字段包含内容" tabindex="-1">1. <code>Action chrome</code> 字段包含内容 <a class="header-anchor" href="#_1-action-chrome-字段包含内容" aria-label="Permalink to &quot;1. `Action chrome` 字段包含内容&quot;">​</a></h3><ol><li><code>Action chrome</code> 内容 共 13 个 <code>&#39;loadTimes&#39;, &#39;csi&#39;, &#39;action&#39;, &#39;dom&#39;, &#39;extension&#39;, &#39;i18n&#39;, &#39;management&#39;, &#39;permissions&#39;, &#39;runtime&#39;, &#39;scripting&#39;, &#39;storage&#39;, &#39;tabs&#39;, &#39;windows&#39;</code></li></ol><p><img src="'+e+'" alt="Action chrome" loading="lazy"></p><ol start="2"><li><code>Chrome.runtime</code> 内容 共 35 个：</li></ol><p><code>&#39;id&#39;,&#39;onRestartRequired&#39;,&#39;onUserScriptMessage&#39;,&#39;onMessageExternal&#39;,&#39;onMessage&#39;,&#39;onUserScriptConnect&#39;,&#39;onConnectExternal&#39;,&#39;onConnect&#39;,&#39;onBrowserUpdateAvailable&#39;,&#39;onUpdateAvailable&#39;,&#39;onSuspendCanceled&#39;,&#39;onSuspend&#39;,&#39;onInstalled&#39;,&#39;onStartup&#39;,&#39;connect&#39;,&#39;getBackgroundPage&#39;,&#39;getContexts&#39;,&#39;getManifest&#39;,&#39;getPackageDirectoryEntry&#39;,&#39;getPlatformInfo&#39;,&#39;getURL&#39;,&#39;openOptionsPage&#39;,&#39;reload&#39;,&#39;requestUpdateCheck&#39;,&#39;restart&#39;,&#39;restartAfterDelay&#39;,&#39;sendMessage&#39;,&#39;setUninstallURL&#39;,&#39;ContextType&#39;,&#39;OnInstalledReason&#39;,&#39;OnRestartRequiredReason&#39;,&#39;PlatformArch&#39;,&#39;PlatformNaclArch&#39;,&#39;PlatformOs&#39;,&#39;RequestUpdateCheckStatus&#39;</code></p><p><img src="'+l+'" alt="Chrome runtime" loading="lazy"></p><h3 id="_2-background-chrome-字段包含内容" tabindex="-1">2. <code>Background chrome</code> 字段包含内容 <a class="header-anchor" href="#_2-background-chrome-字段包含内容" aria-label="Permalink to &quot;2. `Background chrome` 字段包含内容&quot;">​</a></h3><ol><li><code>Background chrome</code> 内容</li></ol><p>共 13 个 <code>&#39;loadTimes&#39;, &#39;csi&#39;, &#39;action&#39;, &#39;dom&#39;, &#39;extension&#39;, &#39;i18n&#39;, &#39;management&#39;, &#39;permissions&#39;, &#39;runtime&#39;, &#39;scripting&#39;, &#39;storage&#39;, &#39;tabs&#39;, &#39;windows&#39;</code></p><p><img src="'+t+'" alt="Background chrome" loading="lazy"></p><ol start="2"><li><code>Chrome.runtime</code> 内容 共 34 个</li></ol><p><code>&#39;id&#39;, &#39;onRestartRequired&#39;, &#39;onUserScriptMessage&#39;, &#39;onMessageExternal&#39;, &#39;onMessage&#39;, &#39;onUserScriptConnect&#39;, &#39;onConnectExternal&#39;, &#39;onConnect&#39;, &#39;onBrowserUpdateAvailable&#39;, &#39;onUpdateAvailable&#39;, &#39;onSuspendCanceled&#39;, &#39;onSuspend&#39;, &#39;onInstalled&#39;, &#39;onStartup&#39;, &#39;connect&#39;, &#39;getContexts&#39;, &#39;getManifest&#39;, &#39;getPlatformInfo&#39;, &#39;getURL&#39;, &#39;openOptionsPage&#39;, &#39;reload&#39;, &#39;requestUpdateCheck&#39;, &#39;restart&#39;, &#39;restartAfterDelay&#39;, &#39;sendMessage&#39;, &#39;setUninstallURL&#39;, &#39;ContextType&#39;, &#39;OnInstalledReason&#39;, &#39;OnRestartRequiredReason&#39;, &#39;PlatformArch&#39;, &#39;PlatformNaclArch&#39;, &#39;PlatformOs&#39;, &#39;RequestUpdateCheckStatus&#39;, &#39;getBackgroundClient&#39;</code></p><p><img src="'+p+'" alt="Alt text" loading="lazy"></p><h3 id="_3-content-script-chrome-内容" tabindex="-1">3. <code>Content script chrome</code> 内容 <a class="header-anchor" href="#_3-content-script-chrome-内容" aria-label="Permalink to &quot;3. `Content script chrome` 内容&quot;">​</a></h3><ol><li><code>Content script chrome</code> 内容</li></ol><p>共 7 个 <code>&#39;csi&#39;,&#39;dom&#39;,&#39;extension&#39;,&#39;i18n&#39;,&#39;loadTimes&#39;,&#39;runtime&#39;,&#39;storage&#39;</code></p><p><img src="'+h+'" alt="Content script chrome" loading="lazy"></p><ol start="2"><li><code>Chrome.runtime</code> 内容</li></ol><p>共 14 个 <code>&#39;id&#39;, &#39;onMessage&#39;, &#39;onConnect&#39;, &#39;ContextType&#39;, &#39;OnInstalledReason&#39;, &#39;OnRestartRequiredReason&#39;, &#39;PlatformArch&#39;, &#39;PlatformNaclArch&#39;, &#39;PlatformOs&#39;, &#39;RequestUpdateCheckStatus&#39;,&#39;connect&#39;,&#39;getManifest&#39;,&#39;getURL&#39;,&#39;sendMessage&#39;</code></p><p><img src="'+k+`" alt="runtime" loading="lazy"></p><p>通过上图可以看出不同的模块中的 <code>chrome</code> 字段包含的内容不一样，不同的 <code>runtime</code> 字段包含的内容也不一样，但是都有 <code>sendMessage</code> 可以进行消息发送</p><h2 id="三、消息传递示例" tabindex="-1">三、消息传递示例 <a class="header-anchor" href="#三、消息传递示例" aria-label="Permalink to &quot;三、消息传递示例&quot;">​</a></h2><h3 id="_1-action-popup-和-background-service-worker-之间的通信" tabindex="-1">1. <code>Action（popup）</code> 和 <code>background（service worker）</code> 之间的通信 <a class="header-anchor" href="#_1-action-popup-和-background-service-worker-之间的通信" aria-label="Permalink to &quot;1. \`Action（popup）\` 和 \`background（service worker）\` 之间的通信&quot;">​</a></h3><h4 id="_1-1-在-popup-中的-index-js-中添加点击事件-进行消息发送" tabindex="-1">1.1. 在 <code>popup</code> 中的 <code>index.js</code> 中添加点击事件，进行消息发送 <a class="header-anchor" href="#_1-1-在-popup-中的-index-js-中添加点击事件-进行消息发送" aria-label="Permalink to &quot;1.1. 在 \`popup\` 中的 \`index.js\` 中添加点击事件，进行消息发送&quot;">​</a></h4><ul><li><code>popup</code> 中使用 <code>chrome.runtime.sendMessage</code> 进行消息发送</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_search_but.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onclick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    action: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fromPopup&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from Popup!&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_1-2-在-service-worker-js-中接收消息" tabindex="-1">1.2. 在 <code>service_worker.js</code> 中接收消息 <a class="header-anchor" href="#_1-2-在-service-worker-js-中接收消息" aria-label="Permalink to &quot;1.2. 在 \`service_worker.js\` 中接收消息&quot;">​</a></h4><ul><li><code>service_worker</code> 中使用 <code>chrome.runtime.onMessage.addListener</code> 进行消息监听，通过 <code>.action</code> 来判断来源</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (message.action </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fromPopup&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chrome.notifications.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;basic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Notifications Title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Notifications message to display&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        iconUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../icons/icon.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">notificationId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;notificationId--&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, notificationId)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="_1-3-消息中心消息弹出" tabindex="-1">1.3. 消息中心消息弹出 <a class="header-anchor" href="#_1-3-消息中心消息弹出" aria-label="Permalink to &quot;1.3. 消息中心消息弹出&quot;">​</a></h4><p><img src="`+r+`" alt="消息中心" loading="lazy"></p><h3 id="_2-content-script-和-background-service-worker-通信" tabindex="-1">2. <code>Content script</code> 和 <code>background（Service Worker）</code> 通信 <a class="header-anchor" href="#_2-content-script-和-background-service-worker-通信" aria-label="Permalink to &quot;2. \`Content script\` 和 \`background（Service Worker）\` 通信&quot;">​</a></h3><h4 id="_2-1-在-content-scripts-中添加点击事件进行消息发送" tabindex="-1">2.1. 在 <code>content_scripts</code> 中添加点击事件进行消息发送 <a class="header-anchor" href="#_2-1-在-content-scripts-中添加点击事件进行消息发送" aria-label="Permalink to &quot;2.1. 在 \`content_scripts\` 中添加点击事件进行消息发送&quot;">​</a></h4><ul><li><code>content_scripts</code> 中使用 <code>chrome.runtime.sendMessage</code> 进行消息发送</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#contentBut&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 发送消息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({action: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fromContent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-2-在-service-worker-js-里面进行消息接收" tabindex="-1">2.2. 在 <code>Service_worker.js</code> 里面进行消息接收 <a class="header-anchor" href="#_2-2-在-service-worker-js-里面进行消息接收" aria-label="Permalink to &quot;2.2. 在 \`Service_worker.js\` 里面进行消息接收&quot;">​</a></h4><ul><li><code>service_worker</code> 中使用 <code>chrome.runtime.onMessage.addListener</code> 进行消息监听，通过 <code>.action</code> 来判断来源</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (message.action </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fromContent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chrome.notifications.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;basic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Notifications Title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Notifications message to display&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        iconUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../icons/icon.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">notificationId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;notificationId--&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, notificationId)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="_2-3-消息中心弹出" tabindex="-1">2.3. 消息中心弹出 <a class="header-anchor" href="#_2-3-消息中心弹出" aria-label="Permalink to &quot;2.3. 消息中心弹出&quot;">​</a></h4><p><img src="`+d+'" alt="消息中心" loading="lazy"></p><h3 id="_3-action-popup-和-content-通信" tabindex="-1">3. <code>Action（popup）</code> 和 <code>content</code> 通信 <a class="header-anchor" href="#_3-action-popup-和-content-通信" aria-label="Permalink to &quot;3. `Action（popup）` 和 `content` 通信&quot;">​</a></h3><p>因为 <code>content</code> 是注入页面的脚本，所以和 <code>content</code> 通信，需要获取当前 <code>tab</code> 信息</p><h4 id="_1-获取当前-tab-信息" tabindex="-1">1. 获取当前 <code>tab</code> 信息 <a class="header-anchor" href="#_1-获取当前-tab-信息" aria-label="Permalink to &quot;1. 获取当前 `tab` 信息&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 以豆瓣举例</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://movie.douban.com/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  currentWindow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tab&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tab)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="'+E+`" alt="tab 信息" loading="lazy"></p><h4 id="_2-popup-向-content-发送消息-content-接收消息" tabindex="-1">2. <code>popup</code> 向 <code>content</code> 发送消息，<code>content</code> 接收消息 <a class="header-anchor" href="#_2-popup-向-content-发送消息-content-接收消息" aria-label="Permalink to &quot;2. \`popup\` 向 \`content\` 发送消息，\`content\` 接收消息&quot;">​</a></h4><h5 id="_2-1-popup-中使用-chrome-tabs-sendmessage-发送消息-content-中使用-chrome-runtime-onmessage-addlistener-接收消息" tabindex="-1">2.1 <code>popup</code> 中使用 <code>chrome.tabs.sendMessage</code> 发送消息，<code>content</code> 中使用 <code>chrome.runtime.onMessage.addListener</code> 接收消息 <a class="header-anchor" href="#_2-1-popup-中使用-chrome-tabs-sendmessage-发送消息-content-中使用-chrome-runtime-onmessage-addlistener-接收消息" aria-label="Permalink to &quot;2.1 \`popup\` 中使用 \`chrome.tabs.sendMessage\` 发送消息，\`content\` 中使用 \`chrome.runtime.onMessage.addListener\` 接收消息&quot;">​</a></h5><ol><li><code>popup</code> 代码</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_search_but.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onclick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    url: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://movie.douban.com/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentWindow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tab&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tab)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (tab) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 使用 chrome.tabs.sendMessage 发送消息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab.id, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      action: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fromPopup2Content&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="2"><li><code>content</code> 使用 <code>chrome.runtime.onMessage.addListener</code> 进行消息监听</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;e&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="3"><li>控制台输出</li></ol><p><img src="`+o+`" alt="控制台输出" loading="lazy"></p><h5 id="_2-2-popup-中使用-chrome-tabs-connect-发送消息-content-使用-chrome-runtime-onconnect-addlistener-来接收消息" tabindex="-1">2.2 <code>popup</code> 中使用 <code>chrome.tabs.connect</code> 发送消息，<code>content</code> 使用 <code>chrome.runtime.onConnect.addListener</code> 来接收消息 <a class="header-anchor" href="#_2-2-popup-中使用-chrome-tabs-connect-发送消息-content-使用-chrome-runtime-onconnect-addlistener-来接收消息" aria-label="Permalink to &quot;2.2 \`popup\` 中使用 \`chrome.tabs.connect\` 发送消息，\`content\` 使用 \`chrome.runtime.onConnect.addListener\` 来接收消息&quot;">​</a></h5><ol><li><code>popup</code> 代码</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_search_but.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onclick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    url: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://movie.douban.com/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentWindow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tab&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tab)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (tab) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> connect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab.id, {name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fromPopup2Content&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;connect&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, connect)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    connect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;这里是弹出框页面，你是谁？&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    connect.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mess</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mess)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ol start="2"><li><code>content</code> 中使用 <code>chrome.runtime.onConnect.addListener</code> 进行消息监听</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onConnect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;contentjs中的 chrome.runtime.onConnect：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,res)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (res.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fromPopup2Content&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mess</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;contentjs中的 res.onMessage.addListener：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mess)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;哈哈哈，我是contentjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="3"><li>日志输出</li></ol><p><code>content</code> 页面日志输出</p><p><img src="`+c+'" alt="日志输出" loading="lazy"></p><p><code>popup</code> 页面日志输出</p><p><img src="'+g+`" alt="日志输出" loading="lazy"></p><h3 id="_4-与其他插件进行通信" tabindex="-1">4. 与其他插件进行通信 <a class="header-anchor" href="#_4-与其他插件进行通信" aria-label="Permalink to &quot;4. 与其他插件进行通信&quot;">​</a></h3><h4 id="_4-1-如需监听传入请求和来自其他插件的连接-需使用-runtime-onmessageexternal-或-runtime-onconnectexternal-方法" tabindex="-1">4.1. 如需监听传入请求和来自其他插件的连接，需使用 <code>runtime.onMessageExternal</code> 或 <code>runtime.onConnectExternal</code> 方法 <a class="header-anchor" href="#_4-1-如需监听传入请求和来自其他插件的连接-需使用-runtime-onmessageexternal-或-runtime-onconnectexternal-方法" aria-label="Permalink to &quot;4.1. 如需监听传入请求和来自其他插件的连接，需使用 \`runtime.onMessageExternal\` 或 \`runtime.onConnectExternal\` 方法&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一次性请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessageExternal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (sender.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blocklistedExtension)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// don&#39;t allow this extension access</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (request.getTargetData)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({targetData: targetData});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (request.activateLasers) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> success </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> activateLasers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({activateLasers: success});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 长期连接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onConnectExternal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  port.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // See other examples for sample onMessage handlers.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_4-2-要向其他插件发送消息-需要其他插件的-id" tabindex="-1">4.2. 要向其他插件发送消息，需要其他插件的 ID <a class="header-anchor" href="#_4-2-要向其他插件发送消息-需要其他插件的-id" aria-label="Permalink to &quot;4.2. 要向其他插件发送消息，需要其他插件的 ID&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 插件 ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> laserExtensionId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;abcdefghijklmnoabcdefhijklmnoabc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一次性请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(laserExtensionId, {getTargetData: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">targetInRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response.targetData))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(laserExtensionId, {activateLasers: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 长期请求</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(laserExtensionId);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_5-网页给插件发送消息" tabindex="-1">5. 网页给插件发送消息 <a class="header-anchor" href="#_5-网页给插件发送消息" aria-label="Permalink to &quot;5. 网页给插件发送消息&quot;">​</a></h3><blockquote><p>插件也可以接收和响应来自其他网页的消息，但无法向网页发送消息</p></blockquote><h4 id="_5-1-插件配置" tabindex="-1">5.1. 插件配置 <a class="header-anchor" href="#_5-1-插件配置" aria-label="Permalink to &quot;5.1. 插件配置&quot;">​</a></h4><ul><li>如需从网页向插件发送消息，需要在 <code>manifest.json</code> 中使用 <code>&quot;externally_connectable&quot;</code> 指定要与哪些网站通信</li><li>这会将 <code>Messaging API</code> 公开给指定的网址格式匹配的任何页面</li><li>网址格式必须包含至少一个“二级网域”；也就是说，不支持 *、*.com、*.co.uk 和 *.appspot.com 等主机名格式</li><li>也可以使用 <code>&lt;all_urls&gt;</code> 访问所有网域</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;externally_connectable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;matches&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://*.douban.com/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_5-2-网页向插件发送消息" tabindex="-1">5.2. 网页向插件发送消息 <a class="header-anchor" href="#_5-2-网页向插件发送消息" aria-label="Permalink to &quot;5.2. 网页向插件发送消息&quot;">​</a></h4><ul><li>使用 <code>runtime.sendMessage()</code> 或 <code>runtime.connect() API</code> 向特定应用或插件发送消息</li><li>需要指定插件 ID</li></ul><h5 id="_5-2-1-web-页面" tabindex="-1">5.2.1 <code>Web</code> 页面 <a class="header-anchor" href="#_5-2-1-web-页面" aria-label="Permalink to &quot;5.2.1 \`Web\` 页面&quot;">​</a></h5><ul><li>使用 <code>runtime.sendMessage()</code> 或 <code>runtime.connect() API</code> 向特定应用或插件发送消息</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> editorExtensionId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;abcdefghijklmnoabcdefhijklmnoabc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(editorExtensionId, {openUrlInEditor: url},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response.success)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    handleError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="_5-2-2-service-worker-js-页面" tabindex="-1">5.2.2 <code>service-worker.js</code> 页面 <a class="header-anchor" href="#_5-2-2-service-worker-js-页面" aria-label="Permalink to &quot;5.2.2 \`service-worker.js\` 页面&quot;">​</a></h5><ul><li>使用 <code>runtime.onMessageExternal</code> 或 <code>runtime.onConnectExternal API</code> 监听网页中的消息</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onMessageExternal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sendResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (sender.url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blocklistedWebsite) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当 URL 等于设置的 blocklistedWebsite 时</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (request.openUrlInEditor)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    openUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request.openUrlInEditor);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_6-原生消息传递" tabindex="-1">6. 原生消息传递 <a class="header-anchor" href="#_6-原生消息传递" aria-label="Permalink to &quot;6. 原生消息传递&quot;">​</a></h3><blockquote><p>插件可以使用与其他消息传递 <code>API</code> 类似的 <code>API</code> 与原生应用交换消息，支持此功能的原生应用必须注册可与插件进行通信的原生消息传递主机。<code>Chrome</code> 会在单独的进程中启动主机，并使用标准输入和标准输出流与其进行通信</p></blockquote><h4 id="_6-1-原生消息传递主机配置文件" tabindex="-1">6.1. 原生消息传递主机配置文件 <a class="header-anchor" href="#_6-1-原生消息传递主机配置文件" aria-label="Permalink to &quot;6.1. 原生消息传递主机配置文件&quot;">​</a></h4><p>如需注册原生消息传递主机，应用必须保存一个定义原生消息传递主机配置的文件，示例如下：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.my_company.my_application&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My Application&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Program Files</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">My Application</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chrome_native_messaging_host.exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stdio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;allowed_origins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chrome-extension://knldjmfmopnpolahpmmgbagdohdnhkik/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>JSON</code> 文件必需包含以下字段</p><ul><li><code>name</code>：原生消息传递主机的名称，客户端将此字符串传递给 <code>runtime.connectNative()</code> 或 <code>runtime.sendNativeMessage()</code><ul><li>此名称只能包含小写字母数字字符下划线和英文句号</li></ul></li><li><code>description</code>：应用说明</li><li><code>path</code>：二进制文件的路径</li><li><code>type</code>：接口类型 <ul><li><code>stdio</code></li><li><code>stdin</code></li><li><code>stdout</code></li></ul></li><li><code>allowed_origins</code>：插件 ID 列表</li></ul><h4 id="_6-2-连接到原生应用" tabindex="-1">6.2. 连接到原生应用 <a class="header-anchor" href="#_6-2-连接到原生应用" aria-label="Permalink to &quot;6.2. 连接到原生应用&quot;">​</a></h4><p>向原生应用收发消息与跨插件消息传递非常相似。主要区别在于，使用的是 <code>runtime.connectNative()</code> 而非 <code>runtime.connect()</code>，使用的是 <code>runtime.sendNativeMessage()</code> 而不是 <code>runtime.sendMessage()</code></p><p>需要在权限中声明 <code>nativeMessaging</code> 权限</p><p><code>service_worker.js</code> 中进行消息监听和消息发送</p><ol><li>使用 <code>connectNative</code></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connectNative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;com.my_company.my_application&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Received&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port.onDisconnect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Disconnected&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, my_application&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li>使用 <code>sendNativeMessage</code></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendNativeMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;com.my_company.my_application&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Received &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,105),b=[y];function m(F,C,v,B,A,q){return a(),i("div",null,b)}const f=s(u,[["render",m]]);export{D as __pageData,f as default};
