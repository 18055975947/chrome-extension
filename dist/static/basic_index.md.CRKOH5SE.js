import{_ as e,c as o,o as a,a4 as c,al as r,am as d,an as i,ao as t,ap as l,aq as h,ar as s}from"./chunks/framework.DUbQYUwk.js";const x=JSON.parse('{"title":"Chrome 插件","description":"","frontmatter":{},"headers":[],"relativePath":"basic/index.md","filePath":"basic/index.md"}'),n={name:"basic/index.md"},m=c('<h1 id="chrome-插件" tabindex="-1"><code>Chrome</code> 插件 <a class="header-anchor" href="#chrome-插件" aria-label="Permalink to &quot;`Chrome` 插件&quot;">​</a></h1><h2 id="一、什么是-chrome-浏览器插件" tabindex="-1">一、什么是 <code>Chrome</code> 浏览器插件？ <a class="header-anchor" href="#一、什么是-chrome-浏览器插件" aria-label="Permalink to &quot;一、什么是 `Chrome` 浏览器插件？&quot;">​</a></h2><blockquote><p>官方叫法是 <code>extensions</code>（扩展），但是好像从接触到使用到开发就一直说的是插件，所以本册都是用这种叫法</p></blockquote><p><code>Chrome</code> 浏览器插件可通过自定义界面、观察浏览器事件和修改网络来提升浏览体验</p><h2 id="二、chrome-浏览器插件是如何构建的" tabindex="-1">二、<code>Chrome</code> 浏览器插件是如何构建的？ <a class="header-anchor" href="#二、chrome-浏览器插件是如何构建的" aria-label="Permalink to &quot;二、`Chrome` 浏览器插件是如何构建的？&quot;">​</a></h2><p>使用 <code>Web</code> 技术开构建 <code>Chrome</code> 插件：<code>HTML、CSS、JS</code></p><p>现在开发 <code>Chrome</code> 插件可以使用 <code>Vite/Webpack</code> 结合 <code>Vue/React</code>、<code>Pinia/Zustand</code>、<code>Naive-ui/Ant Design</code> 开发 <code>Chrome</code> 插件</p><p>此小册将会带大家从原生 <code>JS</code> 开发到使用 <code>Vue</code> 和 <code>React</code> 开发以及最后的使用第三方库 <code>Crxjs</code> 开发 <code>Chrome</code> 插件</p><h2 id="三、chrome-浏览器插件可以做什么" tabindex="-1">三、<code>Chrome</code> 浏览器插件可以做什么？ <a class="header-anchor" href="#三、chrome-浏览器插件可以做什么" aria-label="Permalink to &quot;三、`Chrome` 浏览器插件可以做什么？&quot;">​</a></h2><blockquote><p>根据需求自定义 <code>Chrome</code>，让 <code>Chrome</code> 的功能更强大。</p></blockquote><h3 id="_1-设计界面" tabindex="-1">1. 设计界面 <a class="header-anchor" href="#_1-设计界面" aria-label="Permalink to &quot;1. 设计界面&quot;">​</a></h3><p>大多数插件都需要某种类型的用户互动才能正常运行</p><p>插件平台提供了多种方式来向插件添加互动。这些方法包括从 <code>Chrome</code> 工具栏、侧边栏、上下文菜单等触发的弹出式窗口：</p><h4 id="_1-侧边栏-side-panel" tabindex="-1">1. 侧边栏（<code>Side panel</code>） <a class="header-anchor" href="#_1-侧边栏-side-panel" aria-label="Permalink to &quot;1.  侧边栏（`Side panel`）&quot;">​</a></h4><blockquote><p>使用 <code>chrome.sidePanel API</code> 可将内容托管在浏览器侧边栏中的网页主要内容旁边。</p></blockquote><p><img src="'+r+'" alt="Side panel" loading="lazy"></p><h4 id="_2-操作项-action" tabindex="-1">2. 操作项（<code>Action</code>） <a class="header-anchor" href="#_2-操作项-action" aria-label="Permalink to &quot;2.  操作项（`Action`）&quot;">​</a></h4><blockquote><p>控制插件图标在工具栏中的显示。</p></blockquote><p><img src="'+d+'" alt="Action" loading="lazy"></p><h4 id="_3-菜单项-menus" tabindex="-1">3. 菜单项（<code>Menus</code>） <a class="header-anchor" href="#_3-菜单项-menus" aria-label="Permalink to &quot;3.  菜单项（`Menus`）&quot;">​</a></h4><blockquote><p>向 Google Chrome 的上下文菜单添加项。</p></blockquote><p><img src="'+i+'" alt="Menus" loading="lazy"></p><h3 id="_2-控制浏览器" tabindex="-1">2. 控制浏览器 <a class="header-anchor" href="#_2-控制浏览器" aria-label="Permalink to &quot;2. 控制浏览器&quot;">​</a></h3><p>借助 <code>Chrome</code> 的插件 <code>API</code>，可以改变浏览器的工作方式：</p><ol><li>覆盖 <code>Chrome</code> 页面和设置项：<code>Manifest.json</code> 配置 <code>chrome_settings_overrides</code></li><li>插件开发者工具：<code>Manifest.json</code> 配置 <code>devtools_page</code></li><li>显示通知：<code>chrome.notifications API</code></li><li>管理历史记录：<code>chrome.history API</code></li><li>控制标签页和窗口：<code>chrome.tabs、chrome.tabGroups</code> 和 <code>chrome.windows</code> 等 <code>API</code></li><li>键盘快捷键：<code>chrome.commands API</code></li><li>身份认证：<code>chrome.identity API</code></li><li>管理插件：<code>chrome.management API</code></li><li>提供建议：<code>chrome.omnibox API</code></li><li>更新 <code>Chrome</code> 设置：<code>chrome.proxy API</code></li><li>下载管理：<code>chrome.downloads API</code></li><li>书签：<code>chrome.bookmarks API</code></li><li>...</li></ol><h3 id="_3-控制网络" tabindex="-1">3. 控制网络 <a class="header-anchor" href="#_3-控制网络" aria-label="Permalink to &quot;3. 控制网络&quot;">​</a></h3><p>可以通过注入脚本、拦截网络请求以及使用 <code>Web API</code> 与网页进行交互，来控制和修改 <code>Web</code>：</p><ol><li>注入 <code>JS</code> 和 <code>CSS</code> 文件</li><li>访问当前 <code>Tab</code> 页</li><li>控制 <code>Web</code> 请求</li><li>录音和屏幕截图</li><li>修改网站设置</li></ol><h2 id="四、chrome-插件核心概念" tabindex="-1">四、<code>Chrome</code> 插件核心概念 <a class="header-anchor" href="#四、chrome-插件核心概念" aria-label="Permalink to &quot;四、`Chrome` 插件核心概念&quot;">​</a></h2><blockquote><p>使用 Web 平台和扩展 API，可以通过组合不同的界面组件和扩展平台功能来构建更复杂的功能。</p></blockquote><h3 id="_1-service-worker" tabindex="-1">1. <code>Service Worker</code> <a class="header-anchor" href="#_1-service-worker" aria-label="Permalink to &quot;1. `Service Worker`&quot;">​</a></h3><p><code>Service worker</code> 是一个基于事件的脚本，在浏览器后台运行。它通常用于处理数据、协调扩展中不同部分的任务，以及作为扩展的事件管理器。</p><h3 id="_2-permissions-权限" tabindex="-1">2. <code>Permissions</code> 权限 <a class="header-anchor" href="#_2-permissions-权限" aria-label="Permalink to &quot;2. `Permissions` 权限&quot;">​</a></h3><p>插件在浏览器中获取的功能和数据访问权限，通过声明所需的权限，插件可以执行更广泛的操作。</p><p>权限最小化原则，需要哪些权限加哪些权限。</p><h3 id="_3-content-script-内容脚本" tabindex="-1">3. <code>Content script</code> 内容脚本 <a class="header-anchor" href="#_3-content-script-内容脚本" aria-label="Permalink to &quot;3. `Content script` 内容脚本&quot;">​</a></h3><p>内容脚本是在网页环境中运行的文件，可以操作 <code>DOM</code>，读取浏览器访问网页的信息，对网页就行更改等。</p><h3 id="_4-action" tabindex="-1">4. <code>Action</code> <a class="header-anchor" href="#_4-action" aria-label="Permalink to &quot;4. `Action`&quot;">​</a></h3><p>浏览器工具栏中显示的图标或按钮，用户可以单击该图标或按钮来执行插件提供的功能或操作。</p><h3 id="_5-messaging-消息传递" tabindex="-1">5. <code>Messaging</code> 消息传递 <a class="header-anchor" href="#_5-messaging-消息传递" aria-label="Permalink to &quot;5. `Messaging` 消息传递&quot;">​</a></h3><p>一般来说，消息传递是指 <code>action</code>、<code>content script</code>、<code>service worker</code> 三者之间进行消息传递。</p><h3 id="_6-storage-存储" tabindex="-1">6. <code>Storage</code> 存储 <a class="header-anchor" href="#_6-storage-存储" aria-label="Permalink to &quot;6. `Storage` 存储&quot;">​</a></h3><p><code>Chrome</code> 插件有一个专门的 <code>storage API</code>，用来进行数据存储。</p><h3 id="_7-匹配模式" tabindex="-1">7. 匹配模式 <a class="header-anchor" href="#_7-匹配模式" aria-label="Permalink to &quot;7. 匹配模式&quot;">​</a></h3><p>在开发 <code>Chrome</code> 插件时，可以使用的一种模式匹配语法，用于指定插件的内容脚本或页面操作脚本在哪些 URL 匹配模式下执行</p><h2 id="五-实用插件" tabindex="-1">五. 实用插件 <a class="header-anchor" href="#五-实用插件" aria-label="Permalink to &quot;五. 实用插件&quot;">​</a></h2><h3 id="_1-google-翻译" tabindex="-1">1. <code>Google</code> 翻译 <a class="header-anchor" href="#_1-google-翻译" aria-label="Permalink to &quot;1. `Google` 翻译&quot;">​</a></h3><p><img src="'+t+'" alt="Google 翻译" loading="lazy"></p><h3 id="_2-vue-dev-tools" tabindex="-1">2. <code>Vue Dev Tools</code> <a class="header-anchor" href="#_2-vue-dev-tools" aria-label="Permalink to &quot;2. `Vue Dev Tools`&quot;">​</a></h3><p><img src="'+l+'" alt="Vue devtools" loading="lazy"></p><h3 id="_3-react-dev-tools" tabindex="-1">3. <code>React Dev Tools</code> <a class="header-anchor" href="#_3-react-dev-tools" aria-label="Permalink to &quot;3. `React Dev Tools`&quot;">​</a></h3><p><img src="'+h+'" alt="React Dev Tools" loading="lazy"></p><h3 id="_4-录制-gif" tabindex="-1">4. 录制 <code>Gif</code> <a class="header-anchor" href="#_4-录制-gif" aria-label="Permalink to &quot;4. 录制 `Gif`&quot;">​</a></h3><p><img src="'+s+'" alt="录制 Gif" loading="lazy"></p><h2 id="六、chrome-插件安装" tabindex="-1"><code>六、Chrome</code> 插件安装 <a class="header-anchor" href="#六、chrome-插件安装" aria-label="Permalink to &quot;`六、Chrome` 插件安装&quot;">​</a></h2><h3 id="_1-chrome-应用商店安装" tabindex="-1">1. <code>Chrome</code> 应用商店安装 <a class="header-anchor" href="#_1-chrome-应用商店安装" aria-label="Permalink to &quot;1. `Chrome` 应用商店安装&quot;">​</a></h3><ol><li>浏览器输入：<a href="https://chromewebstore.google.com/" target="_blank" rel="noreferrer">https://chromewebstore.google.com/</a></li><li>搜索和安装自己需要的插件即可</li></ol><h3 id="_2-安装包安装" tabindex="-1">2. 安装包安装 <a class="header-anchor" href="#_2-安装包安装" aria-label="Permalink to &quot;2. 安装包安装&quot;">​</a></h3><ol><li>浏览器输入：<code>chrome://extensions/</code></li><li>点击【加载已解压的拓展程序】按钮</li><li>选择已解压的文件夹即可</li></ol>',59),p=[m];function u(_,b,q,k,P,g){return a(),o("div",null,p)}const C=e(n,[["render",u]]);export{x as __pageData,C as default};
