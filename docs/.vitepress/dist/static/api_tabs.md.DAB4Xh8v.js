import{_ as s,c as a,o as i,a4 as e,aj as l,ak as n}from"./chunks/framework.DUbQYUwk.js";const g=JSON.parse('{"title":"Chrome.tabs API 解析","description":"","frontmatter":{},"headers":[],"relativePath":"api/tabs.md","filePath":"api/tabs.md"}'),t={name:"api/tabs.md"},h=e('<h1 id="chrome-tabs-api-解析" tabindex="-1"><code>Chrome.tabs API</code> 解析 <a class="header-anchor" href="#chrome-tabs-api-解析" aria-label="Permalink to &quot;`Chrome.tabs API` 解析&quot;">​</a></h1><p>使用 <code>chrome.tabs API</code> 与浏览器的标签页系统进行交互，可以使用此 <code>API</code> 在浏览器中创建、修改和重新排列标签页</p><p><code>Tabs API</code> 不仅提供操作和管理标签页的功能，还可以检测标签页的语言、截取屏幕截图，以及与标签页的内容脚本进行通信</p><p><strong><code>Service Worker</code> 和 <code>action</code> 页面可以使用 <code>Tabs API</code>，但 <code>content script</code> 中不能使用</strong></p><h2 id="一、各模块中-chrome-tabs-内容" tabindex="-1">一、各模块中 <code>chrome.tabs</code> 内容 <a class="header-anchor" href="#一、各模块中-chrome-tabs-内容" aria-label="Permalink to &quot;一、各模块中 `chrome.tabs` 内容&quot;">​</a></h2><h3 id="_1-service-worker-中-tabs-内容" tabindex="-1">1. <code>Service worker</code> 中 <code>tabs</code> 内容 <a class="header-anchor" href="#_1-service-worker-中-tabs-内容" aria-label="Permalink to &quot;1. `Service worker` 中 `tabs` 内容&quot;">​</a></h3><p><img src="'+l+'" alt="service worker tabs" loading="lazy"></p><h3 id="_2-action-中-tabs-内容" tabindex="-1">2. <code>Action</code> 中 <code>tabs</code> 内容 <a class="header-anchor" href="#_2-action-中-tabs-内容" aria-label="Permalink to &quot;2. `Action` 中 `tabs` 内容&quot;">​</a></h3><p><img src="'+n+`" alt="action tabs" loading="lazy"></p><h2 id="二、权限" tabindex="-1">二、权限 <a class="header-anchor" href="#二、权限" aria-label="Permalink to &quot;二、权限&quot;">​</a></h2><p>大多数功能都不需要任何权限即可使用，如创建新标签页、重新加载标签页、导航到其他网址等 使用 <code>Tabs API</code> 时需要注意三种权限</p><ul><li><code>tabs</code> 权限</li><li><code>host_permissions</code></li><li><code>activeTab</code> 权限</li></ul><h3 id="_1-tabs-权限" tabindex="-1">1. <code>tabs</code> 权限 <a class="header-anchor" href="#_1-tabs-权限" aria-label="Permalink to &quot;1. \`tabs\` 权限&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My extension&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;tabs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>此权限不授予对 <code>chrome.tabs</code> 命名空间的访问权限。而是会授予插件针对 <code>tabs.Tab</code> 实例上的四个敏感属性调用 <code>tabs.query()</code> 的权限：<code>url、pendingUrl、title</code> 和 <code>favIconUrl</code></p><h3 id="_2-host-permissions" tabindex="-1">2. <code>host_permissions</code> <a class="header-anchor" href="#_2-host-permissions" aria-label="Permalink to &quot;2. \`host_permissions\`&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My extension&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;host_permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;http://*/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://*/*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>主机权限允许插件读取和查询匹配标签页的四个敏感 <code>tabs.Tab</code> 属性。他们还可以使用 <code>tabs.captureVisibleTab()、tabs.executeScript()、tabs.insertCSS()</code> 和 <code>tabs.removeCSS()</code> 等方法直接与匹配的标签页互动</p><h3 id="_3-activetab-权限" tabindex="-1">3. <code>activeTab</code> 权限 <a class="header-anchor" href="#_3-activetab-权限" aria-label="Permalink to &quot;3. \`activeTab\` 权限&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My extension&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;activeTab&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>activeTab</code> 授予插件对当前标签页的临时主机权限，以响应用户调用。与主机权限不同，<code>activeTab</code> 不会触发任何警告</p><h2 id="三、chrome-tabs-类型-types" tabindex="-1">三、<code>chrome.tabs</code> 类型（<code>Types</code>） <a class="header-anchor" href="#三、chrome-tabs-类型-types" aria-label="Permalink to &quot;三、\`chrome.tabs\` 类型（\`Types\`）&quot;">​</a></h2><h3 id="_1-mutedinfo" tabindex="-1">1. <code>MutedInfo</code> <a class="header-anchor" href="#_1-mutedinfo" aria-label="Permalink to &quot;1. \`MutedInfo\`&quot;">​</a></h3><blockquote><p>标签页的静音状态以及上次状态更改的原因。</p></blockquote><h4 id="_1-1-属性" tabindex="-1">1.1. 属性 <a class="header-anchor" href="#_1-1-属性" aria-label="Permalink to &quot;1.1. 属性&quot;">​</a></h4><ul><li><code>extensionId：string</code><ul><li>更改静音状态的插件的 ID。如果插件不是静音状态上次更改的原因，则不设置。</li></ul></li><li><code>muted：boolean</code><ul><li>标签页是否静音（防止播放声音）。即使该标签页尚未播放或当前未播放声音，它也可能被静音。相当于是否显示“静音”音频指示器。</li></ul></li><li><code>reason：MutedInfoReason</code><ul><li>标签页静音或取消静音的原因。如果标签页的静音状态从未改变，则不设置。</li></ul></li></ul><h3 id="_2-mutedinforeason" tabindex="-1">2. <code>MutedInfoReason</code> <a class="header-anchor" href="#_2-mutedinforeason" aria-label="Permalink to &quot;2. \`MutedInfoReason\`&quot;">​</a></h3><blockquote><p>导致静音状态更改的事件。</p></blockquote><h4 id="_2-1-枚举" tabindex="-1">2.1 枚举 <a class="header-anchor" href="#_2-1-枚举" aria-label="Permalink to &quot;2.1 枚举&quot;">​</a></h4><ul><li><code>user</code><ul><li>用户输入操作用于设置静音状态</li></ul></li><li><code>capture</code><ul><li>标签页捕获已开始，强制设为静音状态</li></ul></li><li><code>extension</code><ul><li>由 <code>extensionId</code> 字段标识的插件，用于设置静音状态</li></ul></li></ul><h3 id="_3-tab" tabindex="-1">3. <code>Tab</code> <a class="header-anchor" href="#_3-tab" aria-label="Permalink to &quot;3. \`Tab\`&quot;">​</a></h3><h4 id="_3-1-属性" tabindex="-1">3.1. 属性 <a class="header-anchor" href="#_3-1-属性" aria-label="Permalink to &quot;3.1. 属性&quot;">​</a></h4><ul><li><code>active: boolean</code><ul><li>标签页在其窗口中是否处于活动状态。不一定意味着窗口已聚焦。</li></ul></li><li><code>audible: boolean</code><ul><li>该标签页在过去几秒钟内是否发出声音（但如果也静音，则可能听不到）。相当于是否显示“扬声器音频”指示器。</li></ul></li><li><code>autoDiscardable: boolean</code><ul><li>资源不足时浏览器是否可以自动丢弃标签页。</li></ul></li><li><code>discarded: boolean</code><ul><li>标签是否被丢弃。丢弃的标签页是指其内容已从内存中卸载但在标签页条中仍可见的标签页。下次激活时会重新加载其内容</li></ul></li><li><code>favIconUrl:string</code><ul><li>标签页图标的 URL。此属性仅在插件的清单包含 <code>tabs</code> 权限时才存在。如果标签页正在加载，它也可能是一个空字符串</li></ul></li><li><code>groupId: number</code><ul><li>标签页所属的组的 <code>ID</code></li></ul></li><li><code>height: number</code><ul><li>标签页的高度（以像素为单位）</li></ul></li><li><code>highlighted: boolean</code><ul><li>该标签页是否突出显示</li></ul></li><li><code>id: number</code><ul><li>标签页的 <code>ID</code>。标签 <code>ID</code> 在浏览器会话中是唯一的。在某些情况下，可能不会为标签页分配 <code>ID</code>；例如，当使用会话 <code>API</code> 查询外部标签页时，在这种情况下可能会出现会话 <code>session ID</code>。对于应用程序和开发工具窗口，标签 <code>ID</code> 也可以设置为 <code>chrome.tabs.TAB_ID_NONE</code></li></ul></li><li><code>incognito: boolean</code><ul><li>标签页是否在隐身窗口中</li></ul></li><li><code>index: number</code><ul><li>标签页在其窗口中的从零开始的索引</li></ul></li><li><code>mutedInfo: MutedInfo</code><ul><li>标签页的静音状态以及上次状态更改的原因</li></ul></li><li><code>openerTabId: number</code><ul><li>打开此标签页的标签页的 <code>ID</code>（如果有）。此属性仅在 <code>opener</code> 标签页仍然存在时才存在</li></ul></li><li><code>pendingUrl: string</code><ul><li>标签页在提交之前导航到的 URL。此属性仅在插件的清单包含“标签页”权限并且存在挂起导航时才存在</li></ul></li><li><code>pinned: boolean</code><ul><li>标签页是否固定</li></ul></li><li><code>sessionId: string</code><ul><li>用于唯一标识从会话 <code>API</code> 获取的标签页的会话 <code>sessions ID</code></li></ul></li><li><code>status: TabStatus</code><ul><li>标签页的加载状态。</li></ul></li><li><code>title: string</code><ul><li>标签页的标题。此属性仅在插件的清单包含 <code>tabs</code> 权限时才存在。</li></ul></li><li><code>url: string </code><ul><li>标签页主框架的最后提交 URL。此属性仅在插件的清单包含 <code>tabs</code> 权限时才存在，如果标签页尚未提交，则该属性可能为空字符串。另请参阅 <code>Tab.pendingUrl</code></li></ul></li><li><code>width: number </code><ul><li>标签页的宽度（以像素为单位）。</li></ul></li><li><code>windowId: number</code><ul><li>包含标签页的窗口的 <code>ID</code></li></ul></li></ul><h3 id="_4-tabstatus" tabindex="-1">4. <code>TabStatus</code> <a class="header-anchor" href="#_4-tabstatus" aria-label="Permalink to &quot;4. \`TabStatus\`&quot;">​</a></h3><blockquote><p>标签页的加载状态</p></blockquote><h4 id="_4-1-枚举" tabindex="-1">4.1. 枚举 <a class="header-anchor" href="#_4-1-枚举" aria-label="Permalink to &quot;4.1. 枚举&quot;">​</a></h4><ul><li><code>unloaded</code></li><li><code>loading</code></li><li><code>complete</code></li></ul><h3 id="_5-windowtype" tabindex="-1">5. <code>WindowType</code> <a class="header-anchor" href="#_5-windowtype" aria-label="Permalink to &quot;5. \`WindowType\`&quot;">​</a></h3><blockquote><p>窗口的类型</p></blockquote><h4 id="_5-1-枚举" tabindex="-1">5.1. 枚举 <a class="header-anchor" href="#_5-1-枚举" aria-label="Permalink to &quot;5.1. 枚举&quot;">​</a></h4><ul><li><code>normal</code></li><li><code>popup</code></li><li><code>panel</code></li><li><code>app</code></li><li><code>devtools</code></li></ul><h3 id="_6-zoomsettings" tabindex="-1">6. <code>ZoomSettings</code> <a class="header-anchor" href="#_6-zoomsettings" aria-label="Permalink to &quot;6. \`ZoomSettings\`&quot;">​</a></h3><blockquote><p>定义如何处理标签页中的缩放更改以及在什么范围内。</p></blockquote><h4 id="_6-1-属性" tabindex="-1">6.1. 属性 <a class="header-anchor" href="#_6-1-属性" aria-label="Permalink to &quot;6.1. 属性&quot;">​</a></h4><ul><li><code>defaultZoomFactor：number </code><ul><li>用于在调用 <code>tabs.getZoomSettings</code> 时返回当前标签页的默认缩放级别。</li></ul></li><li><code>mode: ZoomSettingsMode </code><ul><li>定义如何处理缩放更改，即哪个实体负责页面的实际缩放；默认为自动automatic。</li></ul></li><li><code>scope: ZoomSettingsScope </code><ul><li>定义缩放更改是保留页面原点，还是仅在此标签页中生效；在自动automatic模式下默认为 <code>per-origin</code>，否则为 <code>per-tab</code>。</li></ul></li></ul><h3 id="_7-zoomsettingsmode" tabindex="-1">7. <code>ZoomSettingsMode</code> <a class="header-anchor" href="#_7-zoomsettingsmode" aria-label="Permalink to &quot;7. \`ZoomSettingsMode\`&quot;">​</a></h3><blockquote><p>定义如何处理缩放更改，即哪个实体负责页面的实际缩放；默认为自动automatic。</p></blockquote><h4 id="_7-1-枚举" tabindex="-1">7.1. 枚举 <a class="header-anchor" href="#_7-1-枚举" aria-label="Permalink to &quot;7.1. 枚举&quot;">​</a></h4><ul><li><code>automatic</code></li><li><code>manual</code></li><li><code>disabled</code></li></ul><h3 id="_8-zoomsettingsscope" tabindex="-1">8. <code>ZoomSettingsScope</code> <a class="header-anchor" href="#_8-zoomsettingsscope" aria-label="Permalink to &quot;8. \`ZoomSettingsScope\`&quot;">​</a></h3><blockquote><p>定义缩放更改是保留页面原点，还是仅在此标签页中生效；在自动模式(<code>automatic</code>)下默认为 <code>per-origin</code>，否则为 <code>per-tab</code></p></blockquote><h4 id="_8-1-枚举" tabindex="-1">8.1. 枚举 <a class="header-anchor" href="#_8-1-枚举" aria-label="Permalink to &quot;8.1. 枚举&quot;">​</a></h4><ul><li><code>per-origin</code></li><li><code>per-tab</code></li></ul><h2 id="四、chrome-tabs-属性-properties" tabindex="-1">四、<code>chrome.tabs</code> 属性（<code>Properties</code>） <a class="header-anchor" href="#四、chrome-tabs-属性-properties" aria-label="Permalink to &quot;四、\`chrome.tabs\` 属性（\`Properties\`）&quot;">​</a></h2><h3 id="_1-max-capture-visible-tab-calls-per-second" tabindex="-1">1. <code>MAX_CAPTURE_VISIBLE_TAB_CALLS_PER_SECOND</code> <a class="header-anchor" href="#_1-max-capture-visible-tab-calls-per-second" aria-label="Permalink to &quot;1. \`MAX_CAPTURE_VISIBLE_TAB_CALLS_PER_SECOND\`&quot;">​</a></h3><blockquote><p>每秒可以调用 <code>captureVisibleTab</code> <code>的最大次数。captureVisibleTab</code> 开销比较高，不应过于频繁地调用</p></blockquote><h4 id="_1-1-值" tabindex="-1">1.1. 值 <a class="header-anchor" href="#_1-1-值" aria-label="Permalink to &quot;1.1. 值&quot;">​</a></h4><p><strong>2</strong></p><h3 id="_2-tab-id-none" tabindex="-1">2. <code>TAB_ID_NONE</code> <a class="header-anchor" href="#_2-tab-id-none" aria-label="Permalink to &quot;2. \`TAB_ID_NONE\`&quot;">​</a></h3><blockquote><p>表示缺少浏览器标签页的 <code>ID</code></p></blockquote><h4 id="_2-1-值" tabindex="-1">2.1. 值 <a class="header-anchor" href="#_2-1-值" aria-label="Permalink to &quot;2.1. 值&quot;">​</a></h4><p><strong>-1</strong></p><h3 id="_3-tab-index-none" tabindex="-1">3. <code>TAB_INDEX_NONE</code> <a class="header-anchor" href="#_3-tab-index-none" aria-label="Permalink to &quot;3. \`TAB_INDEX_NONE\`&quot;">​</a></h3><blockquote><p>表示 tab_strip 中不存在制表符索引的索引。</p></blockquote><h4 id="_3-1-值" tabindex="-1">3.1. 值 <a class="header-anchor" href="#_3-1-值" aria-label="Permalink to &quot;3.1. 值&quot;">​</a></h4><p><strong>-1</strong></p><h2 id="五、chrome-tabs-方法-methods" tabindex="-1">五、<code>chrome.tabs</code> 方法（<code>Methods</code>） <a class="header-anchor" href="#五、chrome-tabs-方法-methods" aria-label="Permalink to &quot;五、\`chrome.tabs\` 方法（\`Methods\`）&quot;">​</a></h2><h3 id="_1-capturevisibletab" tabindex="-1">1. <code>captureVisibleTab</code> <a class="header-anchor" href="#_1-capturevisibletab" aria-label="Permalink to &quot;1. \`captureVisibleTab\`&quot;">​</a></h3><blockquote><p>捕获指定窗口中当前活动标签页的可见区域</p></blockquote><p>要调用此方法，插件必须具有 <code>&lt;all_urls&gt;</code> 权限或 <code>activeTab</code> 权限。除了插件可以正常访问的站点外，此方法还允许插件捕获其他受限制的敏感站点，包括 <code>chrome:-scheme</code> 页面、其他插件的页面和 <code>data: URL</code>。这些敏感站点只能使用 <code>activeTab</code> 权限进行捕获。仅当插件已被授予文件访问权限时，才可以捕获文件 <code>URL</code></p><h4 id="_1-1-示例" tabindex="-1">1.1. 示例 <a class="header-anchor" href="#_1-1-示例" aria-label="Permalink to &quot;1.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">captureVisibleTab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( windowId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ImageDetails, callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_1-2-参数" tabindex="-1">1.2. 参数 <a class="header-anchor" href="#_1-2-参数" aria-label="Permalink to &quot;1.2. 参数&quot;">​</a></h4><ul><li><code>windowId: number</code><ul><li>目标窗口。默认为当前窗口current window。</li></ul></li><li><code>options: ImageDetails </code></li><li><code>callback: function </code><ul><li>(dataUrl: string) =&gt; void <ul><li>dataUrl: string <ul><li>对捕获的标签页的可见区域的图像进行编码的数据 <code>URL</code>。可以分配给 <code>HTML img</code> 元素的 <code>src</code> 属性以进行显示。</li></ul></li></ul></li></ul></li></ul><h4 id="_1-3-返回" tabindex="-1">1.3. 返回 <a class="header-anchor" href="#_1-3-返回" aria-label="Permalink to &quot;1.3. 返回&quot;">​</a></h4><p><code>Promise&lt;string&gt;</code></p><h3 id="_2-connect" tabindex="-1">2. <code>connect</code> <a class="header-anchor" href="#_2-connect" aria-label="Permalink to &quot;2. \`connect\`&quot;">​</a></h3><blockquote><p>连接到指定标签页中的内容脚本。</p></blockquote><p>在当前插件的指定标签页中运行的每个内容脚本中都会触发 <code>runtime.onConnect</code> 事件</p><h4 id="_2-1-示例" tabindex="-1">2.1. 示例 <a class="header-anchor" href="#_2-1-示例" aria-label="Permalink to &quot;2.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId: number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  connectInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-2-参数" tabindex="-1">2.2. 参数 <a class="header-anchor" href="#_2-2-参数" aria-label="Permalink to &quot;2.2. 参数&quot;">​</a></h4><ul><li><code>tabId：number</code></li><li><code>connectInfo：object </code><ul><li><code>documentId： string</code><ul><li>打开一个指向由 <code>documentId</code> 标识的特定文档的端口，而不是标签页中的所有框架</li></ul></li><li><code>frameId： number </code><ul><li>打开由 <code>frameId</code> 标识的特定框架frame的端口，而不是标签页中的所有框架</li></ul></li><li>name: string <ul><li>传递到 onConnect 用于侦听连接事件的内容脚本。</li></ul></li></ul></li></ul><h4 id="_2-3-返回" tabindex="-1">2.3. 返回 <a class="header-anchor" href="#_2-3-返回" aria-label="Permalink to &quot;2.3. 返回&quot;">​</a></h4><p><code>runtime.Port</code></p><p>可用于与在指定标签页中运行的内容脚本进行通信的端口。如果标签页关闭或不存在，则会触发端口的 <code>runtime.Port</code> 事件。</p><h3 id="_3-create" tabindex="-1">3. <code>create</code> <a class="header-anchor" href="#_3-create" aria-label="Permalink to &quot;3. \`create\`&quot;">​</a></h3><blockquote><p>创建一个新标签页</p></blockquote><h4 id="_3-1-示例" tabindex="-1">3.1. 示例 <a class="header-anchor" href="#_3-1-示例" aria-label="Permalink to &quot;3.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( createProperties: object, callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-2-参数" tabindex="-1">3.2. 参数 <a class="header-anchor" href="#_3-2-参数" aria-label="Permalink to &quot;3.2. 参数&quot;">​</a></h4><ul><li><code>createProperties: object</code><ul><li><code>active: boolean </code><ul><li>该标签页是否应成为窗口中的活动标签页。不影响窗口是否聚焦，默认为 <code>true</code></li></ul></li><li><code>index: number </code><ul><li>标签页在窗口中应占据的位置。提供的值被限制在零和窗口中的标签页数量之间。</li></ul></li><li><code>openerTabId: number </code><ul><li>打开此标签页的标签页的 ID。如果指定，opener 标签页必须与新创建的标签页位于同一窗口中。</li></ul></li><li><code>pinned: boolean </code><ul><li>是否应固定标签页。默认为false。</li></ul></li><li><code>url: string </code><ul><li>最初将标签页导航到的 URL。默认为新标签页。</li></ul></li><li><code>windowId: number </code><ul><li>在其中创建新标签页的窗口。默认为当前窗口current window。</li></ul></li></ul></li><li><code>callback: function </code><ul><li><code>(tab: Tab) =&gt; void</code><ul><li>tab: Tab <ul><li>创建的标签页</li></ul></li></ul></li></ul></li></ul><h4 id="_3-3-返回" tabindex="-1">3.3. 返回 <a class="header-anchor" href="#_3-3-返回" aria-label="Permalink to &quot;3.3. 返回&quot;">​</a></h4><p><code>Promise&lt;Tab&gt;</code></p><h3 id="_4-detectlanguage" tabindex="-1">4. <code>detectLanguage</code> <a class="header-anchor" href="#_4-detectlanguage" aria-label="Permalink to &quot;4. \`detectLanguage\`&quot;">​</a></h3><blockquote><p>检测标签页中内容的主要语言</p></blockquote><h4 id="_4-1-示例" tabindex="-1">4.1. 示例 <a class="header-anchor" href="#_4-1-示例" aria-label="Permalink to &quot;4.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">detectLanguage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_4-2-参数" tabindex="-1">4.2. 参数 <a class="header-anchor" href="#_4-2-参数" aria-label="Permalink to &quot;4.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number </code><ul><li>默认为当前窗口current window的活动标签页。</li></ul></li><li><code>callback: function </code><ul><li><code>(language: string) =&gt; void</code><ul><li><code>language: string</code><ul><li>ISO 语言代码，例如 en 或 fr</li></ul></li></ul></li></ul></li></ul><h4 id="_4-3-返回" tabindex="-1">4.3. 返回 <a class="header-anchor" href="#_4-3-返回" aria-label="Permalink to &quot;4.3. 返回&quot;">​</a></h4><p><code>Promise&lt;string&gt;</code></p><h3 id="_5-discard" tabindex="-1">5. <code>discard</code> <a class="header-anchor" href="#_5-discard" aria-label="Permalink to &quot;5. \`discard\`&quot;">​</a></h3><blockquote><p>从内存中丢弃一个标签页</p></blockquote><h4 id="_5-1-示例" tabindex="-1">5.1. 示例 <a class="header-anchor" href="#_5-1-示例" aria-label="Permalink to &quot;5.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">discard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_5-2-参数" tabindex="-1">5.2. 参数 <a class="header-anchor" href="#_5-2-参数" aria-label="Permalink to &quot;5.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number </code><ul><li>要丢弃的标签页的 ID。如果指定，标签页将被丢弃，除非它处于活动状态或已被丢弃。如果省略，浏览器会丢弃最不重要的标签页</li></ul></li><li><code>callback: function </code><ul><li><code>(tab?: Tab) =&gt; void</code><ul><li><code>tab: Tab </code><ul><li>丢弃的标签页，如果成功丢弃；否则未定义。</li></ul></li></ul></li></ul></li></ul><h4 id="_5-3-返回" tabindex="-1">5.3 返回 <a class="header-anchor" href="#_5-3-返回" aria-label="Permalink to &quot;5.3 返回&quot;">​</a></h4><p><code>Promise&lt;Tab | undefined&gt;</code></p><h3 id="_6-duplicate" tabindex="-1">6. <code>duplicate</code> <a class="header-anchor" href="#_6-duplicate" aria-label="Permalink to &quot;6. \`duplicate\`&quot;">​</a></h3><blockquote><p>复制标签页</p></blockquote><h4 id="_6-1-示例" tabindex="-1">6.1. 示例 <a class="header-anchor" href="#_6-1-示例" aria-label="Permalink to &quot;6.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">duplicate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId: number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_6-2-参数" tabindex="-1">6.2. 参数 <a class="header-anchor" href="#_6-2-参数" aria-label="Permalink to &quot;6.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number</code><ul><li>要复制的标签页的 <code>ID</code></li></ul></li><li><code>callback: function </code><ul><li><code>(tab?: Tab) =&gt; void</code><ul><li>tab: Tab <ul><li>有关重复标签页的详细信息。如果未请求 <code>tabs</code> 权限，则 <code>tabs.Tab</code> 对象不包含 <code>url、pendingUrl、title 和 favIconUrl</code>。</li></ul></li></ul></li></ul></li></ul><h4 id="_6-3-返回" tabindex="-1">6.3. 返回 <a class="header-anchor" href="#_6-3-返回" aria-label="Permalink to &quot;6.3. 返回&quot;">​</a></h4><p><code>Promise&lt;Tab | undefined&gt;</code></p><h3 id="_7-get" tabindex="-1">7. <code>get</code> <a class="header-anchor" href="#_7-get" aria-label="Permalink to &quot;7. \`get\`&quot;">​</a></h3><blockquote><p>检索有关指定标签页的详细信息</p></blockquote><h4 id="_7-1-示例" tabindex="-1">7.1. 示例 <a class="header-anchor" href="#_7-1-示例" aria-label="Permalink to &quot;7.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId: number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_7-2-参数" tabindex="-1">7.2. 参数 <a class="header-anchor" href="#_7-2-参数" aria-label="Permalink to &quot;7.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number</code></li><li><code>callback: function </code><ul><li><code>(tab: Tab) =&gt; void</code></li></ul></li></ul><h4 id="_7-3-返回" tabindex="-1">7.3. 返回 <a class="header-anchor" href="#_7-3-返回" aria-label="Permalink to &quot;7.3. 返回&quot;">​</a></h4><p><code>Promise&lt;Tab&gt;</code></p><h3 id="_8-getcurrent" tabindex="-1">8. <code>getCurrent</code> <a class="header-anchor" href="#_8-getcurrent" aria-label="Permalink to &quot;8. \`getCurrent\`&quot;">​</a></h3><blockquote><p>获取进行此脚本调用的标签页</p></blockquote><h4 id="_8-1-示例" tabindex="-1">8.1. 示例 <a class="header-anchor" href="#_8-1-示例" aria-label="Permalink to &quot;8.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_8-2-参数" tabindex="-1">8.2. 参数 <a class="header-anchor" href="#_8-2-参数" aria-label="Permalink to &quot;8.2. 参数&quot;">​</a></h4><ul><li>callback: function <ul><li>(tab?: Tab) =&gt; void <ul><li>tab: Tab</li></ul></li></ul></li></ul><h4 id="_8-3-返回" tabindex="-1">8.3. 返回 <a class="header-anchor" href="#_8-3-返回" aria-label="Permalink to &quot;8.3. 返回&quot;">​</a></h4><p><code>Promise&lt;Tab | undefined&gt;</code></p><h3 id="_9-getzoom" tabindex="-1">9. <code>getZoom</code> <a class="header-anchor" href="#_9-getzoom" aria-label="Permalink to &quot;9. \`getZoom\`&quot;">​</a></h3><blockquote><p>获取指定标签页的当前缩放系数</p></blockquote><h4 id="_9-1-示例" tabindex="-1">9.1. 示例 <a class="header-anchor" href="#_9-1-示例" aria-label="Permalink to &quot;9.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getZoom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_9-2-参数" tabindex="-1">9.2. 参数 <a class="header-anchor" href="#_9-2-参数" aria-label="Permalink to &quot;9.2. 参数&quot;">​</a></h4><ul><li>tabId: number <ul><li>从中获取当前缩放系数的标签页的 ID；默认为当前窗口的活动标签页。</li></ul></li><li>callback: function <ul><li>(zoomFactor: number) =&gt; void <ul><li>zoomFactor: number <ul><li>标签页的当前缩放系数。</li></ul></li></ul></li></ul></li></ul><h4 id="_9-3-返回" tabindex="-1">9.3. 返回 <a class="header-anchor" href="#_9-3-返回" aria-label="Permalink to &quot;9.3. 返回&quot;">​</a></h4><p><code>Promise&lt;number&gt;</code></p><h3 id="_10-getzoomsettings" tabindex="-1">10. <code>getZoomSettings</code> <a class="header-anchor" href="#_10-getzoomsettings" aria-label="Permalink to &quot;10. \`getZoomSettings\`&quot;">​</a></h3><blockquote><p>获取指定标签页的当前缩放设置</p></blockquote><h4 id="_10-1-示例" tabindex="-1">10.1. 示例 <a class="header-anchor" href="#_10-1-示例" aria-label="Permalink to &quot;10.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getZoomSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_10-2-参数" tabindex="-1">10.2. 参数 <a class="header-anchor" href="#_10-2-参数" aria-label="Permalink to &quot;10.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number </code><ul><li>从中获取当前缩放设置的标签页的 ID；默认为当前窗口的活动标签页。</li></ul></li><li><code>callback: function </code><ul><li><code>(zoomSettings: ZoomSettings) =&gt; void</code><ul><li>zoomSettings: ZoomSettings <ul><li>标签页的当前缩放设置</li></ul></li></ul></li></ul></li></ul><h4 id="_10-3-返回" tabindex="-1">10.3. 返回 <a class="header-anchor" href="#_10-3-返回" aria-label="Permalink to &quot;10.3. 返回&quot;">​</a></h4><p><code>Promise&lt;ZoomSettings&gt;</code></p><h3 id="_11-goback" tabindex="-1">11. <code>goBack</code> <a class="header-anchor" href="#_11-goback" aria-label="Permalink to &quot;11. \`goBack\`&quot;">​</a></h3><blockquote><p>如果有，请返回上一页</p></blockquote><h4 id="_11-1-示例" tabindex="-1">11.1. 示例 <a class="header-anchor" href="#_11-1-示例" aria-label="Permalink to &quot;11.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">goBack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_11-2-参数" tabindex="-1">11.2. 参数 <a class="header-anchor" href="#_11-2-参数" aria-label="Permalink to &quot;11.2. 参数&quot;">​</a></h4><ul><li><code>tabId： number </code><ul><li>要返回的标签页的 ID；默认为当前窗口的选定标签页。</li></ul></li><li><code>callback： function </code><ul><li><code>() =&gt; void</code></li></ul></li></ul><h4 id="_11-3-返回" tabindex="-1">11.3. 返回 <a class="header-anchor" href="#_11-3-返回" aria-label="Permalink to &quot;11.3. 返回&quot;">​</a></h4><p><code>Promise&lt;void&gt;</code></p><h3 id="_12-goforward" tabindex="-1">12. <code>goForward</code> <a class="header-anchor" href="#_12-goforward" aria-label="Permalink to &quot;12. \`goForward\`&quot;">​</a></h3><blockquote><p>前进到下一页，如果有的话</p></blockquote><h4 id="_12-1-示例" tabindex="-1">12.1. 示例 <a class="header-anchor" href="#_12-1-示例" aria-label="Permalink to &quot;12.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">goForward</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_12-2-参数" tabindex="-1">12.2. 参数 <a class="header-anchor" href="#_12-2-参数" aria-label="Permalink to &quot;12.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number </code><ul><li>要向前导航的标签页的 ID；默认为当前窗口的选定标签页</li></ul></li><li><code>callback: function </code><ul><li><code>() =&gt; void</code></li></ul></li></ul><h4 id="_12-3-返回" tabindex="-1">12.3. 返回 <a class="header-anchor" href="#_12-3-返回" aria-label="Permalink to &quot;12.3. 返回&quot;">​</a></h4><p><code>Promise&lt;void&gt;</code></p><h3 id="_13-group" tabindex="-1">13. <code>group</code> <a class="header-anchor" href="#_13-group" aria-label="Permalink to &quot;13. \`group\`&quot;">​</a></h3><blockquote><p>将一个或多个标签页添加到指定的组，或者如果未指定组，则将给定的标签页添加到新创建的组。</p></blockquote><h4 id="_13-1-示例" tabindex="-1">13.1. 示例 <a class="header-anchor" href="#_13-1-示例" aria-label="Permalink to &quot;13.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  options: object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_13-2-参数" tabindex="-1">13.2. 参数 <a class="header-anchor" href="#_13-2-参数" aria-label="Permalink to &quot;13.2. 参数&quot;">​</a></h4><ul><li><code>options: object</code><ul><li><code>createProperties: object</code> 用于创建组的配置。如果已经指定了 groupId，则不能使用 <ul><li><code>windowId: number </code><ul><li>新组的窗口。默认为当前窗口</li></ul></li></ul></li><li><code>groupId: number</code><ul><li>要将标签页添加到的组的 ID。如果未指定，将创建一个新组</li></ul></li><li><code>tabIds: number | [number, ...number[]]</code><ul><li>要添加到指定组的标签页 ID 或标签页 ID 列表</li></ul></li></ul></li><li><code>callback: function </code><ul><li><code>(groupId: number) =&gt; void</code><ul><li><code>groupId: number</code><ul><li>添加标签页的组的 <code>ID</code></li></ul></li></ul></li></ul></li></ul><h4 id="_13-3-返回" tabindex="-1">13.3. 返回 <a class="header-anchor" href="#_13-3-返回" aria-label="Permalink to &quot;13.3. 返回&quot;">​</a></h4><p><code>Promise&lt;number&gt;</code></p><h3 id="_14-highlight" tabindex="-1">14. <code>highlight</code> <a class="header-anchor" href="#_14-highlight" aria-label="Permalink to &quot;14. \`highlight\`&quot;">​</a></h3><blockquote><p>突出显示给定的标签页并关注组中的第一个。如果指定的标签页当前处于活动状态，则似乎什么都不做</p></blockquote><h4 id="_14-1-示例" tabindex="-1">14.1. 示例 <a class="header-anchor" href="#_14-1-示例" aria-label="Permalink to &quot;14.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highlight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  highlightInfo: object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_14-2-参数" tabindex="-1">14.2. 参数 <a class="header-anchor" href="#_14-2-参数" aria-label="Permalink to &quot;14.2. 参数&quot;">​</a></h4><ul><li>highlightInfo: object <ul><li>tabs: number | number[] <ul><li>要突出显示的一个或多个标签索引。</li></ul></li><li>windowId: number <ul><li>包含标签页的窗口。</li></ul></li></ul></li><li>callback: function <ul><li><code>(window: Window) =&gt; void</code></li></ul></li></ul><h4 id="_14-3-返回" tabindex="-1">14.3. 返回 <a class="header-anchor" href="#_14-3-返回" aria-label="Permalink to &quot;14.3. 返回&quot;">​</a></h4><p><code>Promise&lt;windows.Window&gt;</code></p><h3 id="_15-move" tabindex="-1">15. <code>move</code> <a class="header-anchor" href="#_15-move" aria-label="Permalink to &quot;15. \`move\`&quot;">​</a></h3><blockquote><p>将一个或多个标签页移动到其窗口内的新位置，或移动到新窗口。请注意，标签页只能移入和移出普通 (window.type === &quot;normal&quot;) 窗口</p></blockquote><h4 id="_15-1-示例" tabindex="-1">15.1. 示例 <a class="header-anchor" href="#_15-1-示例" aria-label="Permalink to &quot;15.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabIds: number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number[],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  moveProperties: object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_15-2-参数" tabindex="-1">15.2. 参数 <a class="header-anchor" href="#_15-2-参数" aria-label="Permalink to &quot;15.2. 参数&quot;">​</a></h4><ul><li>tabIds:number | number[] <ul><li>要移动的标签页 ID 或标签页 ID 列表。</li></ul></li><li>moveProperties: object <ul><li>index: number <ul><li>将窗口移动到的位置。使用 -1 将标签页放在窗口的末尾。</li></ul></li><li>windowId: number <ul><li>默认为标签页当前所在的窗口。</li></ul></li></ul></li><li>callback: function <ul><li><code>(tabs: Tab | Tab[]) =&gt; void</code></li></ul></li></ul><h4 id="_15-3-返回" tabindex="-1">15.3. 返回 <a class="header-anchor" href="#_15-3-返回" aria-label="Permalink to &quot;15.3. 返回&quot;">​</a></h4><p><code>Promise&lt;Tab | Tab[]&gt;</code></p><h3 id="_16-query" tabindex="-1">16. <code>query</code> <a class="header-anchor" href="#_16-query" aria-label="Permalink to &quot;16. \`query\`&quot;">​</a></h3><blockquote><p>获取具有指定属性的所有标签页，如果未指定属性，则获取所有标签页</p></blockquote><h4 id="_16-1-示例" tabindex="-1">16.1. 示例 <a class="header-anchor" href="#_16-1-示例" aria-label="Permalink to &quot;16.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  queryInfo: object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_16-2-参数" tabindex="-1">16.2. 参数 <a class="header-anchor" href="#_16-2-参数" aria-label="Permalink to &quot;16.2. 参数&quot;">​</a></h4><ul><li><code>queryInfo: object</code><ul><li><code>active: boolean </code><ul><li>标签页在其窗口中是否处于活动状态</li></ul></li><li><code>audible: boolean</code><ul><li>是否可以听到标签页</li></ul></li><li><code>autoDiscardable: boolean </code><ul><li>资源不足时浏览器是否可以自动丢弃标签页</li></ul></li><li><code>currentWindow: boolean</code><ul><li>标签页是否在当前窗口中current window</li></ul></li><li><code>discarded: boolean </code><ul><li>标签是否被丢弃。丢弃的标签页是指其内容已从内存中卸载但在标签页条中仍可见的标签页。下次激活时会重新加载其内容</li></ul></li><li><code>groupId: number </code><ul><li>标签页所在组的 ID，或 tabGroups.TAB_GROUP_ID_NONE 用于未分组的标签页</li></ul></li><li><code>highlighted: boolean </code><ul><li>标签页是否突出显示</li></ul></li><li><code>index: number </code><ul><li>标签页在其窗口中的位置</li></ul></li><li><code>lastFocusedWindow: boolean </code><ul><li>标签页是否在最后一个聚焦窗口中</li></ul></li><li><code>muted: boolean </code><ul><li>标签页是否静音</li></ul></li><li><code>pinned: boolean </code><ul><li>标签是否固定</li></ul></li><li><code>status: TabStatus </code><ul><li>标签页加载状态。</li></ul></li><li><code>title: string </code><ul><li>将页面标题与模式匹配。如果插件没有“tabs”权限，则忽略此属性。</li></ul></li><li><code>url: string | string[] </code><ul><li>根据一个或多个 URL 模式匹配URL patterns标签页。片段标识符不匹配。如果插件没有“tabs”权限，则忽略此属性。</li></ul></li><li><code>windowId: number </code><ul><li>父窗口的 ID，或当前窗口current window的 windows.WINDOW_ID_CURRENT。</li></ul></li><li><code>windowType: WindowType </code><ul><li>标签页所在的窗口类型。</li></ul></li></ul></li><li><code>callback: function </code><ul><li><code>(result: Tab[]) =&gt; void</code></li></ul></li></ul><h4 id="_16-3-返回" tabindex="-1">16.3. 返回 <a class="header-anchor" href="#_16-3-返回" aria-label="Permalink to &quot;16.3. 返回&quot;">​</a></h4><p><code>Promise&lt;Tab[]&gt;</code></p><h3 id="_17-reload" tabindex="-1">17. <code>reload</code> <a class="header-anchor" href="#_17-reload" aria-label="Permalink to &quot;17. \`reload\`&quot;">​</a></h3><blockquote><p>重新加载标签页</p></blockquote><h4 id="_17-1-示例" tabindex="-1">17.1. 示例 <a class="header-anchor" href="#_17-1-示例" aria-label="Permalink to &quot;17.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  reloadProperties</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_17-2-参数" tabindex="-1">17.2. 参数 <a class="header-anchor" href="#_17-2-参数" aria-label="Permalink to &quot;17.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number </code><ul><li>要重新加载的标签页的 ID；默认为当前窗口的选定标签页。</li></ul></li><li>reloadProperties: object <ul><li>bypassCache: boolean <ul><li>是否绕过本地缓存。默认为false。</li></ul></li></ul></li><li>callback: function <ul><li><code>() =&gt; void</code></li></ul></li></ul><h4 id="_17-3-返回" tabindex="-1">17.3. 返回 <a class="header-anchor" href="#_17-3-返回" aria-label="Permalink to &quot;17.3. 返回&quot;">​</a></h4><p><code>Promise&lt;void&gt;</code></p><h3 id="_18-remove" tabindex="-1">18. <code>remove</code> <a class="header-anchor" href="#_18-remove" aria-label="Permalink to &quot;18. \`remove\`&quot;">​</a></h3><blockquote><p>关闭一个或多个标签页</p></blockquote><h4 id="_18-1-示例" tabindex="-1">18.1. 示例 <a class="header-anchor" href="#_18-1-示例" aria-label="Permalink to &quot;18.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabIds: number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number[],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_18-2-参数" tabindex="-1">18.2. 参数 <a class="header-anchor" href="#_18-2-参数" aria-label="Permalink to &quot;18.2. 参数&quot;">​</a></h4><ul><li>tabIds: number | number[] <ul><li>要关闭的标签页 ID 或标签页 ID 列表。</li></ul></li><li>callback: function <ul><li><code>() =&gt; void</code></li></ul></li></ul><h4 id="_18-3-返回" tabindex="-1">18.3. 返回 <a class="header-anchor" href="#_18-3-返回" aria-label="Permalink to &quot;18.3. 返回&quot;">​</a></h4><p><code>Promise&lt;void&gt;</code></p><h3 id="_19-sendmessage" tabindex="-1">19. <code>sendMessage</code> <a class="header-anchor" href="#_19-sendmessage" aria-label="Permalink to &quot;19. \`sendMessage\`&quot;">​</a></h3><blockquote><p>向指定标签页中的内容脚本发送一条消息，并在发回响应时运行可选的回调。在当前插件的指定标签页中运行的每个内容脚本中都会触发 runtime.onMessage 事件</p></blockquote><h4 id="_19-1-示例" tabindex="-1">19.1. 示例 <a class="header-anchor" href="#_19-1-示例" aria-label="Permalink to &quot;19.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId: number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  message: any,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  responseCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_19-2-参数" tabindex="-1">19.2. 参数 <a class="header-anchor" href="#_19-2-参数" aria-label="Permalink to &quot;19.2. 参数&quot;">​</a></h4><ul><li><code>tabId: number</code></li><li><code>message: any</code><ul><li>要发送的消息。此消息应该是一个 JSON-ifiable 对象。</li></ul></li><li><code>options: object </code><ul><li><code>documentId: string</code><ul><li>向由 documentId 标识的特定文档发送消息，而不是标签页中的所有框架</li></ul></li><li><code>frameId: number </code><ul><li>将消息发送到由 frameId 标识的特定框架frame，而不是标签页中的所有框架</li></ul></li></ul></li><li><code>callback: function </code><ul><li><code>(response: any) =&gt; void</code></li></ul></li></ul><p>消息处理程序发送的 JSON 响应对象。如果在连接到指定标签页时发生错误，则不带参数调用回调并将 runtime.lastError 设置为错误消息</p><h4 id="_19-3-返回" tabindex="-1">19.3. 返回 <a class="header-anchor" href="#_19-3-返回" aria-label="Permalink to &quot;19.3. 返回&quot;">​</a></h4><p><code>Promise&lt;any&gt;</code></p><h3 id="_20-setzoom" tabindex="-1">20. <code>setZoom</code> <a class="header-anchor" href="#_20-setzoom" aria-label="Permalink to &quot;20. \`setZoom\`&quot;">​</a></h3><blockquote><p>缩放指定的标签页</p></blockquote><h4 id="_20-1-示例" tabindex="-1">20.1. 示例 <a class="header-anchor" href="#_20-1-示例" aria-label="Permalink to &quot;20.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setZoom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  zoomFactor: number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_20-2-参数" tabindex="-1">20.2. 参数 <a class="header-anchor" href="#_20-2-参数" aria-label="Permalink to &quot;20.2. 参数&quot;">​</a></h4><ul><li>tabId: number <ul><li>要缩放的标签页的 ID；默认为当前窗口的活动标签页。</li></ul></li><li>zoomFactor: number <ul><li>新的缩放系数。值 0 将标签页设置为其当前的默认缩放系数。大于 0 的值指定标签页的（可能是非默认的）缩放系数。</li></ul></li><li>callback: function <ul><li><code>() =&gt; void</code></li></ul></li></ul><h4 id="_20-3-返回" tabindex="-1">20.3. 返回 <a class="header-anchor" href="#_20-3-返回" aria-label="Permalink to &quot;20.3. 返回&quot;">​</a></h4><p><code>Promise&lt;void&gt;</code></p><h3 id="_21-setzoomsettings" tabindex="-1">21. <code>setZoomSettings</code> <a class="header-anchor" href="#_21-setzoomsettings" aria-label="Permalink to &quot;21. \`setZoomSettings\`&quot;">​</a></h3><blockquote><p>设置指定标签页的缩放设置，定义如何处理缩放更改。导航标签页时，这些设置将重置为默认值。</p></blockquote><h4 id="_21-1-示例" tabindex="-1">21.1. 示例 <a class="header-anchor" href="#_21-1-示例" aria-label="Permalink to &quot;21.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setZoomSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number, zoomSettings: ZoomSettings, callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_21-2-参数" tabindex="-1">21.2. 参数 <a class="header-anchor" href="#_21-2-参数" aria-label="Permalink to &quot;21.2. 参数&quot;">​</a></h4><ul><li>tabId: number <ul><li>要更改缩放设置的标签页的 ID；默认为当前窗口的活动标签页。</li></ul></li><li>zoomSettings: ZoomSettings <ul><li>定义如何处理缩放更改以及在什么范围内。</li></ul></li><li>callback: function <ul><li><code>() =&gt; void</code></li></ul></li></ul><h4 id="_21-3-返回" tabindex="-1">21.3. 返回 <a class="header-anchor" href="#_21-3-返回" aria-label="Permalink to &quot;21.3. 返回&quot;">​</a></h4><p><code>Promise&lt;void&gt;</code></p><h3 id="_22-ungroup" tabindex="-1">22. <code>ungroup</code> <a class="header-anchor" href="#_22-ungroup" aria-label="Permalink to &quot;22. \`ungroup\`&quot;">​</a></h3><blockquote><p>从各自的组中删除一个或多个标签页。如果任何组变空，它们将被删除。</p></blockquote><h4 id="_22-1-示例" tabindex="-1">22.1. 示例 <a class="header-anchor" href="#_22-1-示例" aria-label="Permalink to &quot;22.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ungroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabIds: number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [number, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number[]],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_22-2-参数" tabindex="-1">22.2. 参数 <a class="header-anchor" href="#_22-2-参数" aria-label="Permalink to &quot;22.2. 参数&quot;">​</a></h4><ul><li><code>tabIds: number | [number, ...number[]]</code><ul><li>要从各自组中删除的标签页 ID 或标签页 ID 列表。</li></ul></li><li><code>callback: function </code><ul><li><code>() =&gt; void</code></li></ul></li></ul><h4 id="_22-3-返回" tabindex="-1">22.3. 返回 <a class="header-anchor" href="#_22-3-返回" aria-label="Permalink to &quot;22.3. 返回&quot;">​</a></h4><p><code>Promise&lt;void&gt;</code></p><h3 id="_23-update" tabindex="-1">23. <code>update</code> <a class="header-anchor" href="#_23-update" aria-label="Permalink to &quot;23. \`update\`&quot;">​</a></h3><blockquote><p>修改标签页的属性。未在 updateProperties 中指定的属性不会被修改。</p></blockquote><h4 id="_23-1-示例" tabindex="-1">23.1. 示例 <a class="header-anchor" href="#_23-1-示例" aria-label="Permalink to &quot;23.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  updateProperties: object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_23-2-参数" tabindex="-1">23.2. 参数 <a class="header-anchor" href="#_23-2-参数" aria-label="Permalink to &quot;23.2. 参数&quot;">​</a></h4><ul><li>tabId: number <ul><li>默认为当前窗口current window的选定标签页。</li></ul></li><li>updateProperties: object <ul><li>active: boolean <ul><li>该标签页是否应处于活动状态。不影响窗口是否聚焦（参见 windows.update）。</li></ul></li><li>autoDiscardable: boolean <ul><li>当资源不足时，浏览器是否应自动丢弃该标签页。</li></ul></li><li>highlighted: boolean <ul><li>在当前选择中添加或删除标签页。</li></ul></li><li>muted: boolean <ul><li>该标签页是否应静音。</li></ul></li><li>openerTabId: number <ul><li>打开此标签页的标签页的 ID。如果指定，opener 标签页必须与此标签页位于同一窗口中。</li></ul></li><li>pinned: boolean <ul><li>是否应固定标签页。</li></ul></li><li>url: string <ul><li>将标签页导航到的 URL。不支持 JavaScript URL；改用 scripting.executeScript 。</li></ul></li></ul></li><li>callback: function <ul><li>(tab?: Tab) =&gt; void</li></ul></li></ul><h4 id="_23-3-返回" tabindex="-1">23.3. 返回 <a class="header-anchor" href="#_23-3-返回" aria-label="Permalink to &quot;23.3. 返回&quot;">​</a></h4><p><code>Promise&lt;Tab | undefined&gt;</code></p><h2 id="六、chrome-tabs-事件-events" tabindex="-1">六、<code>chrome.tabs</code> 事件（<code>Events</code>） <a class="header-anchor" href="#六、chrome-tabs-事件-events" aria-label="Permalink to &quot;六、\`chrome.tabs\` 事件（\`Events\`）&quot;">​</a></h2><h3 id="_1-onactivated" tabindex="-1">1. <code>onActivated</code> <a class="header-anchor" href="#_1-onactivated" aria-label="Permalink to &quot;1. \`onActivated\`&quot;">​</a></h3><blockquote><p>当窗口中的活动标签页更改时触发。请注意，在触发此事件时可能未设置标签页的 URL，但可以侦听 onUpdated 事件，以便在设置 URL 时收到通知。</p></blockquote><h4 id="_1-1-示例-1" tabindex="-1">1.1. 示例 <a class="header-anchor" href="#_1-1-示例-1" aria-label="Permalink to &quot;1.1. 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onActivated.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_1-2-参数-1" tabindex="-1">1.2. 参数 <a class="header-anchor" href="#_1-2-参数-1" aria-label="Permalink to &quot;1.2. 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(activeInfo: object) =&gt; void</code><ul><li><code>tabId: number</code><ul><li>已激活的标签页的 <code>ID</code></li></ul></li><li><code>windowId: number</code><ul><li>活动标签页在其中更改的窗口的 <code>ID</code></li></ul></li></ul></li></ul></li></ul><h3 id="_2-onattached" tabindex="-1">2. <code>onAttached</code> <a class="header-anchor" href="#_2-onattached" aria-label="Permalink to &quot;2. \`onAttached\`&quot;">​</a></h3><blockquote><p>将标签页附加到窗口时激发</p></blockquote><h4 id="_2-1-示例-1" tabindex="-1">2.1 示例 <a class="header-anchor" href="#_2-1-示例-1" aria-label="Permalink to &quot;2.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onAttached.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-2-参数-1" tabindex="-1">2.2 参数 <a class="header-anchor" href="#_2-2-参数-1" aria-label="Permalink to &quot;2.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(tabId: number, attachInfo: object) =&gt; void</code><ul><li><code>tabId: number</code></li><li><code>attachInfo: object</code><ul><li><code>newPosition: number</code></li><li><code>newWindowId: number</code></li></ul></li></ul></li></ul></li></ul><h3 id="_3-oncreated" tabindex="-1">3. <code>onCreated</code> <a class="header-anchor" href="#_3-oncreated" aria-label="Permalink to &quot;3. \`onCreated\`&quot;">​</a></h3><blockquote><p>创建标签页时触发</p></blockquote><h4 id="_3-1-示例-1" tabindex="-1">3.1 示例 <a class="header-anchor" href="#_3-1-示例-1" aria-label="Permalink to &quot;3.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onCreated.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_3-2-参数-1" tabindex="-1">3.2 参数 <a class="header-anchor" href="#_3-2-参数-1" aria-label="Permalink to &quot;3.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(tab: Tab) =&gt; void</code></li></ul></li></ul><h3 id="_4-ondetached" tabindex="-1">4. <code>onDetached</code> <a class="header-anchor" href="#_4-ondetached" aria-label="Permalink to &quot;4. \`onDetached\`&quot;">​</a></h3><blockquote><p>当标签页从窗口分离时激发</p></blockquote><h4 id="_4-1-示例-1" tabindex="-1">4.1 示例 <a class="header-anchor" href="#_4-1-示例-1" aria-label="Permalink to &quot;4.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onDetached.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_4-2-参数-1" tabindex="-1">4.2 参数 <a class="header-anchor" href="#_4-2-参数-1" aria-label="Permalink to &quot;4.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(tabId: number, detachInfo: object) =&gt; void</code><ul><li><code>tabId: number</code></li><li><code>detachInfo: object</code><ul><li><code>oldPosition: number</code></li><li><code>oldWindowId: number</code></li></ul></li></ul></li></ul></li></ul><h3 id="_5-onhighlighted" tabindex="-1">5. <code>onHighlighted</code> <a class="header-anchor" href="#_5-onhighlighted" aria-label="Permalink to &quot;5. \`onHighlighted\`&quot;">​</a></h3><blockquote><p>当窗口中突出显示或选定的标签页发生变化时触发。</p></blockquote><h4 id="_5-1-示例-1" tabindex="-1">5.1 示例 <a class="header-anchor" href="#_5-1-示例-1" aria-label="Permalink to &quot;5.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onHighlighted.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_5-2-参数-1" tabindex="-1">5.2 参数 <a class="header-anchor" href="#_5-2-参数-1" aria-label="Permalink to &quot;5.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(highlightInfo: object) =&gt; void</code><ul><li><code>selectInfo: object</code><ul><li><code>tabIds: number[]</code><ul><li>窗口中所有突出显示的标签页。</li></ul></li><li><code>windowId: number</code><ul><li>标签页更改的窗口。</li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="_6-onmoved" tabindex="-1">6. <code>onMoved</code> <a class="header-anchor" href="#_6-onmoved" aria-label="Permalink to &quot;6. \`onMoved\`&quot;">​</a></h3><blockquote><p>在窗口内移动标签页时触发</p></blockquote><h4 id="_6-1-示例-1" tabindex="-1">6.1 示例 <a class="header-anchor" href="#_6-1-示例-1" aria-label="Permalink to &quot;6.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onMoved.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_6-2-参数-1" tabindex="-1">6.2 参数 <a class="header-anchor" href="#_6-2-参数-1" aria-label="Permalink to &quot;6.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(tabId: number, moveInfo: object) =&gt; void</code><ul><li><code>tabId: number</code></li><li><code>moveInfo: object</code><ul><li><code>fromIndex: number</code></li><li><code>toIndex: number</code></li><li><code>windowId: number</code></li></ul></li></ul></li></ul></li></ul><h3 id="_7-onremoved" tabindex="-1">7. <code>onRemoved</code> <a class="header-anchor" href="#_7-onremoved" aria-label="Permalink to &quot;7. \`onRemoved\`&quot;">​</a></h3><blockquote><p>关闭标签页时触发</p></blockquote><h4 id="_7-1-示例-1" tabindex="-1">7.1 示例 <a class="header-anchor" href="#_7-1-示例-1" aria-label="Permalink to &quot;7.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onRemoved.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_7-2-参数-1" tabindex="-1">7.2 参数 <a class="header-anchor" href="#_7-2-参数-1" aria-label="Permalink to &quot;7.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(tabId: number, removeInfo: object) =&gt; void</code><ul><li><code>tabId: number</code></li><li><code>removeInfo: object</code><ul><li><code>isWindowClosing: boolean</code><ul><li>由于其父窗口已关闭而关闭标签页时为 <code>True</code></li></ul></li><li><code>windowId: number</code><ul><li>标签页关闭的窗口</li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="_8-onreplaced" tabindex="-1">8. <code>onReplaced</code> <a class="header-anchor" href="#_8-onreplaced" aria-label="Permalink to &quot;8. \`onReplaced\`&quot;">​</a></h3><blockquote><p>由于预渲染或即时将标签页替换为另一个标签页时触发</p></blockquote><h4 id="_8-1-示例-1" tabindex="-1">8.1 示例 <a class="header-anchor" href="#_8-1-示例-1" aria-label="Permalink to &quot;8.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onReplaced.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_8-2-参数-1" tabindex="-1">8.2 参数 <a class="header-anchor" href="#_8-2-参数-1" aria-label="Permalink to &quot;8.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(addedTabId: number, removedTabId: number) =&gt; void</code><ul><li><code>addedTabId: number</code></li><li><code>removedTabId: number</code></li></ul></li></ul></li></ul><h3 id="_9-onupdated" tabindex="-1">9. <code>onUpdated</code> <a class="header-anchor" href="#_9-onupdated" aria-label="Permalink to &quot;9. \`onUpdated\`&quot;">​</a></h3><blockquote><p>更新标签页时触发</p></blockquote><h4 id="_9-1-示例-1" tabindex="-1">9.1 示例 <a class="header-anchor" href="#_9-1-示例-1" aria-label="Permalink to &quot;9.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onUpdated.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_9-2-参数-1" tabindex="-1">9.2 参数 <a class="header-anchor" href="#_9-2-参数-1" aria-label="Permalink to &quot;9.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(tabId: number, changeInfo: object, tab: Tab) =&gt; void</code><ul><li><code>tabId: number</code></li><li><code>changeInfo: object</code><ul><li><code>audible: boolean </code><ul><li>标签页的新声音状态</li></ul></li><li><code>autoDiscardable: boolean </code><ul><li>标签页的新自动丢弃状态。</li></ul></li><li><code>discarded: boolean </code><ul><li>标签页的新丢弃状态</li></ul></li><li><code>favIconUrl: string </code><ul><li>标签页的新图标 <code>URL</code></li></ul></li><li><code>groupId: number </code><ul><li>标签页的新组。</li></ul></li><li><code>mutedInfo: MutedInfo </code><ul><li>标签页的新静音状态和更改原因</li></ul></li><li><code>pinned: boolean </code><ul><li>标签页的新固定状态。</li></ul></li><li><code>status: TabStatus </code><ul><li>标签页的加载状态</li></ul></li><li><code>title: string </code><ul><li>标签页的新标题。</li></ul></li><li><code>url: string </code><ul><li>标签页的 <code>URL</code></li></ul></li></ul></li><li><code>tab: Tab</code></li></ul></li></ul></li></ul><h3 id="_10-onzoomchange" tabindex="-1">10. <code>onZoomChange</code> <a class="header-anchor" href="#_10-onzoomchange" aria-label="Permalink to &quot;10. \`onZoomChange\`&quot;">​</a></h3><blockquote><p>缩放标签页时触发</p></blockquote><h4 id="_10-1-示例-1" tabindex="-1">10.1 示例 <a class="header-anchor" href="#_10-1-示例-1" aria-label="Permalink to &quot;10.1 示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onZoomChange.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  callback: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_10-2-参数-1" tabindex="-1">10.2 参数 <a class="header-anchor" href="#_10-2-参数-1" aria-label="Permalink to &quot;10.2 参数&quot;">​</a></h4><ul><li><code>callback: function</code><ul><li><code>(ZoomChangeInfo: object) =&gt; void</code><ul><li><code>ZoomChangeInfo: object</code><ul><li><code>newZoomFactor: number</code></li><li><code>oldZoomFactor: number</code></li><li><code>tabId: number</code></li><li><code>zoomSettings: ZoomSettings</code></li></ul></li></ul></li></ul></li></ul><h2 id="七、chrome-tabs-api-使用示例" tabindex="-1">七、<code>chrome.tabs API</code> 使用示例 <a class="header-anchor" href="#七、chrome-tabs-api-使用示例" aria-label="Permalink to &quot;七、\`chrome.tabs API\` 使用示例&quot;">​</a></h2><h3 id="_1-在新标签页中打开插件页面" tabindex="-1">1. 在新标签页中打开插件页面 <a class="header-anchor" href="#_1-在新标签页中打开插件页面" aria-label="Permalink to &quot;1. 在新标签页中打开插件页面&quot;">​</a></h3><p>在安装插件后在新标签页中打开初始配置页面</p><p><code>Service Worker js</code> 中</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.runtime.onInstalled.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (reason </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;install&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;setting.html&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-获取当前标签页" tabindex="-1">2. 获取当前标签页 <a class="header-anchor" href="#_2-获取当前标签页" aria-label="Permalink to &quot;2. 获取当前标签页&quot;">​</a></h3><p>插件的 <code>Service Worker</code> 如何从当前聚焦的窗口 <code>Service Worker js</code> 中</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCurrentTab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> queryOptions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lastFocusedWindow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [tab] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(queryOptions);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCurrentTab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> queryOptions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lastFocusedWindow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(queryOptions, ([</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (chrome.runtime.lastError)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chrome.runtime.lastError);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_3-将指定标签页静音" tabindex="-1">3. 将指定标签页静音 <a class="header-anchor" href="#_3-将指定标签页静音" aria-label="Permalink to &quot;3. 将指定标签页静音&quot;">​</a></h3><p>插件如何切换指定标签页的静音状态</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toggleMuteState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tabId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tab</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> muted</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.mutedInfo.muted;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId, {muted});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Tab \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">muted</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;muted&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unmuted&quot;}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toggleMuteState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tabId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> muted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.mutedInfo.muted;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId, { muted });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Tab \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> muted</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;muted&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unmuted&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_4-点击当前标签页时将其移至第一个位置" tabindex="-1">4. 点击当前标签页时将其移至第一个位置 <a class="header-anchor" href="#_4-点击当前标签页时将其移至第一个位置" aria-label="Permalink to &quot;4. 点击当前标签页时将其移至第一个位置&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.tabs.onActivated.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(moveToFirstPosition);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moveToFirstPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">activeInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(activeInfo.tabId, {index: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Success.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Error: Tabs cannot be edited right now (user may be dragging a tab).&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moveToFirstPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(activeInfo), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_5-向所选标签页的内容脚本传递消息" tabindex="-1">5. 向所选标签页的内容脚本传递消息 <a class="header-anchor" href="#_5-向所选标签页的内容脚本传递消息" aria-label="Permalink to &quot;5. 向所选标签页的内容脚本传递消息&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sendMessageToActiveTab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lastFocusedWindow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome.tabs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab.id, message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,333),o=[h];function d(r,p,c,k,u,b){return i(),a("div",null,o)}const m=s(t,[["render",d]]);export{g as __pageData,m as default};
